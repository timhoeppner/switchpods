

HI-TECH Software PIC18 LITE Macro Assembler V1.00 build 12136 
                                                                                               Fri Mar 22 22:12:06 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F65K22
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   109  0000                     PMD3 equ 0F16h ;# 
   110                           # 63 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   111  0000                     PMD2 equ 0F17h ;# 
   112                           # 81 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   113  0000                     PMD1 equ 0F18h ;# 
   114                           # 100 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   115  0000                     PMD0 equ 0F19h ;# 
   116                           # 127 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   117  0000                     PSTR3CON equ 0F1Ah ;# 
   118                           # 177 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   119  0000                     PSTR2CON equ 0F1Bh ;# 
   120                           # 273 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   121  0000                     TXREG2 equ 0F1Ch ;# 
   122                           # 285 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   123  0000                     RCREG2 equ 0F1Dh ;# 
   124                           # 297 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   125  0000                     SPBRG2 equ 0F1Eh ;# 
   126                           # 309 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   127  0000                     SPBRGH2 equ 0F1Fh ;# 
   128                           # 321 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   129  0000                     BAUDCON2 equ 0F20h ;# 
   130                           # 379 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   131  0000                     TXSTA2 equ 0F21h ;# 
   132                           # 415 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   133  0000                     RCSTA2 equ 0F22h ;# 
   134                           # 455 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   135  0000                     ANCON2 equ 0F23h ;# 
   136                           # 485 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   137  0000                     ANCON1 equ 0F24h ;# 
   138                           # 515 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   139  0000                     ANCON0 equ 0F25h ;# 
   140                           # 565 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   141  0000                     ODCON3 equ 0F27h ;# 
   142                           # 580 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   143  0000                     ODCON2 equ 0F28h ;# 
   144                           # 597 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   145  0000                     ODCON1 equ 0F29h ;# 
   146                           # 613 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   147  0000                     REFOCON equ 0F2Ah ;# 
   148                           # 635 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   149  0000                     CCPTMRS2 equ 0F2Bh ;# 
   150                           # 651 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   151  0000                     CCPTMRS1 equ 0F2Ch ;# 
   152                           # 675 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   153  0000                     CCPTMRS0 equ 0F2Dh ;# 
   154                           # 699 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   155  0000                     CM3CON equ 0F2Eh ;# 
   156                           # 704 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   157  0000                     CM3CON1 equ 0F2Eh ;# 
   158                           # 808 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   159  0000                     CM2CON equ 0F2Fh ;# 
   160                           # 813 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   161  0000                     CM2CON1 equ 0F2Fh ;# 
   162                           # 917 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   163  0000                     T8CON equ 0F36h ;# 
   164                           # 940 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   165  0000                     PR8 equ 0F37h ;# 
   166                           # 952 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   167  0000                     TMR8 equ 0F38h ;# 
   168                           # 964 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   169  0000                     T6CON equ 0F39h ;# 
   170                           # 987 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   171  0000                     PR6 equ 0F3Ah ;# 
   172                           # 999 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   173  0000                     TMR6 equ 0F3Bh ;# 
   174                           # 1011 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   175  0000                     CCP8CON equ 0F46h ;# 
   176                           # 1037 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   177  0000                     CCPR8 equ 0F47h ;# 
   178                           # 1043 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   179  0000                     CCPR8L equ 0F47h ;# 
   180                           # 1055 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   181  0000                     CCPR8H equ 0F48h ;# 
   182                           # 1067 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   183  0000                     CCP3CON equ 0F49h ;# 
   184                           # 1091 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   185  0000                     CCPR3 equ 0F4Ah ;# 
   186                           # 1097 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   187  0000                     CCPR3L equ 0F4Ah ;# 
   188                           # 1109 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   189  0000                     CCPR3H equ 0F4Bh ;# 
   190                           # 1121 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   191  0000                     ECCP3DEL equ 0F4Ch ;# 
   192                           # 1143 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   193  0000                     ECCP3AS equ 0F4Dh ;# 
   194                           # 1167 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   195  0000                     CCP2CON equ 0F4Eh ;# 
   196                           # 1172 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   197  0000                     ECCP2CON equ 0F4Eh ;# 
   198                           # 1224 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   199  0000                     CCPR2 equ 0F4Fh ;# 
   200                           # 1230 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   201  0000                     CCPR2L equ 0F4Fh ;# 
   202                           # 1242 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   203  0000                     CCPR2H equ 0F50h ;# 
   204                           # 1254 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   205  0000                     ECCP2DEL equ 0F51h ;# 
   206                           # 1259 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   207  0000                     PWM2CON equ 0F51h ;# 
   208                           # 1297 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   209  0000                     ECCP2AS equ 0F52h ;# 
   210                           # 1321 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   211  0000                     PADCFG1 equ 0F53h ;# 
   212                           # 1342 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   213  0000                     CM1CON equ 0F54h ;# 
   214                           # 1347 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   215  0000                     CM1CON1 equ 0F54h ;# 
   216                           # 1465 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   217  0000                     CTMUICON equ 0F55h ;# 
   218                           # 1488 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   219  0000                     CTMUCONL equ 0F56h ;# 
   220                           # 1513 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   221  0000                     CTMUCONH equ 0F57h ;# 
   222                           # 1532 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   223  0000                     ALRMVAL equ 0F58h ;# 
   224                           # 1538 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   225  0000                     ALRMVALL equ 0F58h ;# 
   226                           # 1550 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   227  0000                     ALRMVALH equ 0F59h ;# 
   228                           # 1562 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   229  0000                     ALRMRPT equ 0F5Ah ;# 
   230                           # 1584 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   231  0000                     ALRMCFG equ 0F5Bh ;# 
   232                           # 1607 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   233  0000                     RTCVAL equ 0F5Ch ;# 
   234                           # 1613 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   235  0000                     RTCVALL equ 0F5Ch ;# 
   236                           # 1625 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   237  0000                     RTCVALH equ 0F5Dh ;# 
   238                           # 1668 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   239  0000                     RTCCAL equ 0F5Eh ;# 
   240                           # 1690 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   241  0000                     RTCCFG equ 0F5Fh ;# 
   242                           # 1712 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   243  0000                     PIE6 equ 0F60h ;# 
   244                           # 1728 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   245  0000                     EEDATA equ 0F61h ;# 
   246                           # 1740 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   247  0000                     EEADR equ 0F62h ;# 
   248                           # 1752 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   249  0000                     EEADRH equ 0F63h ;# 
   250                           # 1764 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   251  0000                     OSCCON2 equ 0F64h ;# 
   252                           # 1781 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   253  0000                     BAUDCON1 equ 0F65h ;# 
   254                           # 1786 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   255  0000                     BAUDCTL equ 0F65h ;# 
   256                           # 1790 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   257  0000                     BAUDCON equ 0F65h ;# 
   258                           # 2023 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   259  0000                     SSP2CON2 equ 0F66h ;# 
   260                           # 2101 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   261  0000                     SSP2CON1 equ 0F67h ;# 
   262                           # 2154 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   263  0000                     SSP2STAT equ 0F68h ;# 
   264                           # 2327 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   265  0000                     SSP2ADD equ 0F69h ;# 
   266                           # 2370 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   267  0000                     SSP2MSK equ 0F69h ;# 
   268                           # 2389 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   269  0000                     SSP2BUF equ 0F6Ah ;# 
   270                           # 2401 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   271  0000                     T4CON equ 0F6Bh ;# 
   272                           # 2424 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   273  0000                     PR4 equ 0F6Ch ;# 
   274                           # 2436 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   275  0000                     TMR4 equ 0F6Dh ;# 
   276                           # 2448 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   277  0000                     CCP7CON equ 0F6Eh ;# 
   278                           # 2474 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   279  0000                     CCPR7 equ 0F6Fh ;# 
   280                           # 2480 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   281  0000                     CCPR7L equ 0F6Fh ;# 
   282                           # 2492 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   283  0000                     CCPR7H equ 0F70h ;# 
   284                           # 2504 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   285  0000                     CCP6CON equ 0F71h ;# 
   286                           # 2530 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   287  0000                     CCPR6 equ 0F72h ;# 
   288                           # 2536 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   289  0000                     CCPR6L equ 0F72h ;# 
   290                           # 2548 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   291  0000                     CCPR6H equ 0F73h ;# 
   292                           # 2560 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   293  0000                     CCP5CON equ 0F74h ;# 
   294                           # 2586 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   295  0000                     CCPR5 equ 0F75h ;# 
   296                           # 2592 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   297  0000                     CCPR5L equ 0F75h ;# 
   298                           # 2604 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   299  0000                     CCPR5H equ 0F76h ;# 
   300                           # 2616 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   301  0000                     CCP4CON equ 0F77h ;# 
   302                           # 2642 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   303  0000                     CCPR4 equ 0F78h ;# 
   304                           # 2648 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   305  0000                     CCPR4L equ 0F78h ;# 
   306                           # 2660 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   307  0000                     CCPR4H equ 0F79h ;# 
   308                           # 2672 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   309  0000                     T5GCON equ 0F7Ah ;# 
   310                           # 2708 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   311  0000                     T5CON equ 0F7Bh ;# 
   312                           # 2744 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   313  0000                     TMR5 equ 0F7Ch ;# 
   314                           # 2750 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   315  0000                     TMR5L equ 0F7Ch ;# 
   316                           # 2762 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   317  0000                     TMR5H equ 0F7Dh ;# 
   318                           # 2774 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   319  0000                     EECON2 equ 0F7Eh ;# 
   320                           # 2786 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   321  0000                     EECON1 equ 0F7Fh ;# 
   322                           # 2809 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   323  0000                     PORTA equ 0F80h ;# 
   324                           # 2870 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   325  0000                     PORTB equ 0F81h ;# 
   326                           # 2926 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   327  0000                     PORTC equ 0F82h ;# 
   328                           # 2981 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   329  0000                     PORTD equ 0F83h ;# 
   330                           # 3047 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   331  0000                     PORTE equ 0F84h ;# 
   332                           # 3177 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   333  0000                     PORTF equ 0F85h ;# 
   334                           # 3238 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   335  0000                     PORTG equ 0F86h ;# 
   336                           # 3314 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   337  0000                     LATA equ 0F89h ;# 
   338                           # 3367 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   339  0000                     LATB equ 0F8Ah ;# 
   340                           # 3420 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   341  0000                     LATC equ 0F8Bh ;# 
   342                           # 3473 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   343  0000                     LATD equ 0F8Ch ;# 
   344                           # 3526 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   345  0000                     LATE equ 0F8Dh ;# 
   346                           # 3579 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   347  0000                     LATF equ 0F8Eh ;# 
   348                           # 3632 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   349  0000                     LATG equ 0F8Fh ;# 
   350                           # 3670 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   351  0000                     TRISA equ 0F92h ;# 
   352                           # 3692 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   353  0000                     TRISB equ 0F93h ;# 
   354                           # 3714 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   355  0000                     TRISC equ 0F94h ;# 
   356                           # 3736 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   357  0000                     TRISD equ 0F95h ;# 
   358                           # 3758 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   359  0000                     TRISE equ 0F96h ;# 
   360                           # 3780 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   361  0000                     TRISF equ 0F97h ;# 
   362                           # 3802 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   363  0000                     TRISG equ 0F98h ;# 
   364                           # 3821 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   365  0000                     OSCTUNE equ 0F9Bh ;# 
   366                           # 3843 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   367  0000                     PSTR1CON equ 0F9Ch ;# 
   368                           # 3866 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   369  0000                     PIE1 equ 0F9Dh ;# 
   370                           # 3891 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   371  0000                     PIR1 equ 0F9Eh ;# 
   372                           # 3916 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   373  0000                     IPR1 equ 0F9Fh ;# 
   374                           # 3941 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   375  0000                     PIE2 equ 0FA0h ;# 
   376                           # 3965 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   377  0000                     PIR2 equ 0FA1h ;# 
   378                           # 3989 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   379  0000                     IPR2 equ 0FA2h ;# 
   380                           # 4013 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   381  0000                     PIE3 equ 0FA3h ;# 
   382                           # 4059 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   383  0000                     PIR3 equ 0FA4h ;# 
   384                           # 4086 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   385  0000                     IPR3 equ 0FA5h ;# 
   386                           # 4113 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   387  0000                     PIR6 equ 0FA6h ;# 
   388                           # 4129 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   389  0000                     PSPCON equ 0FA7h ;# 
   390                           # 4145 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   391  0000                     HLVDCON equ 0FA8h ;# 
   392                           # 4167 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   393  0000                     IPR6 equ 0FA9h ;# 
   394                           # 4183 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   395  0000                     T1GCON equ 0FAAh ;# 
   396                           # 4219 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   397  0000                     RCSTA1 equ 0FABh ;# 
   398                           # 4224 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   399  0000                     RCSTA equ 0FABh ;# 
   400                           # 4322 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   401  0000                     TXSTA1 equ 0FACh ;# 
   402                           # 4327 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   403  0000                     TXSTA equ 0FACh ;# 
   404                           # 4405 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   405  0000                     TXREG1 equ 0FADh ;# 
   406                           # 4410 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   407  0000                     TXREG equ 0FADh ;# 
   408                           # 4428 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   409  0000                     RCREG1 equ 0FAEh ;# 
   410                           # 4433 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   411  0000                     RCREG equ 0FAEh ;# 
   412                           # 4451 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   413  0000                     SPBRG1 equ 0FAFh ;# 
   414                           # 4456 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   415  0000                     SPBRG equ 0FAFh ;# 
   416                           # 4474 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   417  0000                     T3GCON equ 0FB0h ;# 
   418                           # 4510 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   419  0000                     T3CON equ 0FB1h ;# 
   420                           # 4550 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   421  0000                     TMR3 equ 0FB2h ;# 
   422                           # 4556 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   423  0000                     TMR3L equ 0FB2h ;# 
   424                           # 4568 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   425  0000                     TMR3H equ 0FB3h ;# 
   426                           # 4580 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   427  0000                     CMSTAT equ 0FB4h ;# 
   428                           # 4585 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   429  0000                     CMSTATUS equ 0FB4h ;# 
   430                           # 4633 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   431  0000                     CVRCON equ 0FB5h ;# 
   432                           # 4663 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   433  0000                     PIE4 equ 0FB6h ;# 
   434                           # 4680 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   435  0000                     PIR4 equ 0FB7h ;# 
   436                           # 4697 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   437  0000                     IPR4 equ 0FB8h ;# 
   438                           # 4717 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   439  0000                     PIE5 equ 0FB9h ;# 
   440                           # 4733 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   441  0000                     PIR5 equ 0FBAh ;# 
   442                           # 4749 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   443  0000                     CCP1CON equ 0FBBh ;# 
   444                           # 4754 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   445  0000                     ECCP1CON equ 0FBBh ;# 
   446                           # 4806 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   447  0000                     CCPR1 equ 0FBCh ;# 
   448                           # 4818 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   449  0000                     CCPR1L equ 0FBCh ;# 
   450                           # 4830 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   451  0000                     CCPR1H equ 0FBDh ;# 
   452                           # 4842 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   453  0000                     ECCP1DEL equ 0FBEh ;# 
   454                           # 4847 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   455  0000                     PWM1CON equ 0FBEh ;# 
   456                           # 4885 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   457  0000                     ECCP1AS equ 0FBFh ;# 
   458                           # 4909 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   459  0000                     ADCON2 equ 0FC0h ;# 
   460                           # 4932 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   461  0000                     ADCON1 equ 0FC1h ;# 
   462                           # 4969 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   463  0000                     ADCON0 equ 0FC2h ;# 
   464                           # 5016 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   465  0000                     ADRES equ 0FC3h ;# 
   466                           # 5028 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   467  0000                     ADRESL equ 0FC3h ;# 
   468                           # 5040 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   469  0000                     ADRESH equ 0FC4h ;# 
   470                           # 5052 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   471  0000                     SSP1CON2 equ 0FC5h ;# 
   472                           # 5057 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   473  0000                     SSPCON2 equ 0FC5h ;# 
   474                           # 5207 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   475  0000                     SSP1CON1 equ 0FC6h ;# 
   476                           # 5212 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   477  0000                     SSPCON1 equ 0FC6h ;# 
   478                           # 5312 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   479  0000                     SSP1STAT equ 0FC7h ;# 
   480                           # 5317 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   481  0000                     SSPSTAT equ 0FC7h ;# 
   482                           # 5577 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   483  0000                     SSP1ADD equ 0FC8h ;# 
   484                           # 5582 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   485  0000                     SSPADD equ 0FC8h ;# 
   486                           # 5724 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   487  0000                     SSP1MSK equ 0FC8h ;# 
   488                           # 5743 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   489  0000                     SSP1BUF equ 0FC9h ;# 
   490                           # 5748 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   491  0000                     SSPBUF equ 0FC9h ;# 
   492                           # 5766 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   493  0000                     T2CON equ 0FCAh ;# 
   494                           # 5789 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   495  0000                     PR2 equ 0FCBh ;# 
   496                           # 5794 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   497  0000                     MEMCON equ 0FCBh ;# 
   498                           # 5812 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   499  0000                     TMR2 equ 0FCCh ;# 
   500                           # 5824 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   501  0000                     T1CON equ 0FCDh ;# 
   502                           # 5860 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   503  0000                     TMR1 equ 0FCEh ;# 
   504                           # 5872 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   505  0000                     TMR1L equ 0FCEh ;# 
   506                           # 5884 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   507  0000                     TMR1H equ 0FCFh ;# 
   508                           # 5896 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   509  0000                     RCON equ 0FD0h ;# 
   510                           # 5946 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   511  0000                     WDTCON equ 0FD1h ;# 
   512                           # 5968 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   513  0000                     IPR5 equ 0FD2h ;# 
   514                           # 6006 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   515  0000                     OSCCON equ 0FD3h ;# 
   516                           # 6030 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   517  0000                     SPBRGH1 equ 0FD4h ;# 
   518                           # 6042 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   519  0000                     T0CON equ 0FD5h ;# 
   520                           # 6064 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   521  0000                     TMR0 equ 0FD6h ;# 
   522                           # 6076 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   523  0000                     TMR0L equ 0FD6h ;# 
   524                           # 6088 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   525  0000                     TMR0H equ 0FD7h ;# 
   526                           # 6100 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   527  0000                     STATUS equ 0FD8h ;# 
   528                           # 6131 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   529  0000                     FSR2 equ 0FD9h ;# 
   530                           # 6143 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   531  0000                     FSR2L equ 0FD9h ;# 
   532                           # 6155 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   533  0000                     FSR2H equ 0FDAh ;# 
   534                           # 6167 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   535  0000                     PLUSW2 equ 0FDBh ;# 
   536                           # 6179 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   537  0000                     PREINC2 equ 0FDCh ;# 
   538                           # 6191 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   539  0000                     POSTDEC2 equ 0FDDh ;# 
   540                           # 6203 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   541  0000                     POSTINC2 equ 0FDEh ;# 
   542                           # 6215 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   543  0000                     INDF2 equ 0FDFh ;# 
   544                           # 6227 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   545  0000                     BSR equ 0FE0h ;# 
   546                           # 6239 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   547  0000                     FSR1 equ 0FE1h ;# 
   548                           # 6251 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   549  0000                     FSR1L equ 0FE1h ;# 
   550                           # 6263 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   551  0000                     FSR1H equ 0FE2h ;# 
   552                           # 6275 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   553  0000                     PLUSW1 equ 0FE3h ;# 
   554                           # 6287 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   555  0000                     PREINC1 equ 0FE4h ;# 
   556                           # 6299 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   557  0000                     POSTDEC1 equ 0FE5h ;# 
   558                           # 6311 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   559  0000                     POSTINC1 equ 0FE6h ;# 
   560                           # 6323 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   561  0000                     INDF1 equ 0FE7h ;# 
   562                           # 6335 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   563  0000                     WREG equ 0FE8h ;# 
   564                           # 6347 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   565  0000                     FSR0 equ 0FE9h ;# 
   566                           # 6359 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   567  0000                     FSR0L equ 0FE9h ;# 
   568                           # 6371 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   569  0000                     FSR0H equ 0FEAh ;# 
   570                           # 6383 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   571  0000                     PLUSW0 equ 0FEBh ;# 
   572                           # 6395 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   573  0000                     PREINC0 equ 0FECh ;# 
   574                           # 6407 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   575  0000                     POSTDEC0 equ 0FEDh ;# 
   576                           # 6419 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   577  0000                     POSTINC0 equ 0FEEh ;# 
   578                           # 6431 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   579  0000                     INDF0 equ 0FEFh ;# 
   580                           # 6443 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   581  0000                     INTCON3 equ 0FF0h ;# 
   582                           # 6472 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   583  0000                     INTCON2 equ 0FF1h ;# 
   584                           # 6502 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   585  0000                     INTCON equ 0FF2h ;# 
   586                           # 6551 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   587  0000                     PROD equ 0FF3h ;# 
   588                           # 6563 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   589  0000                     PRODL equ 0FF3h ;# 
   590                           # 6575 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   591  0000                     PRODH equ 0FF4h ;# 
   592                           # 6587 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   593  0000                     TABLAT equ 0FF5h ;# 
   594                           # 6599 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   595  0000                     TBLPTR equ 0FF6h ;# 
   596                           # 6612 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   597  0000                     TBLPTRL equ 0FF6h ;# 
   598                           # 6624 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   599  0000                     TBLPTRH equ 0FF7h ;# 
   600                           # 6636 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   601  0000                     TBLPTRU equ 0FF8h ;# 
   602                           # 6649 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   603  0000                     PCLAT equ 0FF9h ;# 
   604                           # 6654 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   605  0000                     PC equ 0FF9h ;# 
   606                           # 6672 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   607  0000                     PCL equ 0FF9h ;# 
   608                           # 6684 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   609  0000                     PCLATH equ 0FFAh ;# 
   610                           # 6696 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   611  0000                     PCLATU equ 0FFBh ;# 
   612                           # 6708 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   613  0000                     STKPTR equ 0FFCh ;# 
   614                           # 6732 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   615  0000                     TOS equ 0FFDh ;# 
   616                           # 6744 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   617  0000                     TOSL equ 0FFDh ;# 
   618                           # 6756 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   619  0000                     TOSH equ 0FFEh ;# 
   620                           # 6768 "/opt/microchip/xc8/v1.00/include/pic18f65k22.h"
   621  0000                     TOSU equ 0FFFh ;# 
   622                           	FNCALL	_main,_setupIO
   623                           	FNCALL	_main,__delay_ms
   624                           	FNCALL	_main,_checkButton
   625                           	FNCALL	_main,_setOutputs
   626                           	FNCALL	_setOutputs,_setOutput
   627                           	FNROOT	_main
   628                           	global	main@F9062
   629                           	global	main@F9048
   630                           	global	main@F9050
   631                           	global	main@F9052
   632                           	global	main@F9054
   633                           psect	idataCOMRAM,class=CODE,space=0,delta=1
   634                           global __pidataCOMRAM
   635  0072C4                     __pidataCOMRAM:
   636                           	file	"../switch_pods.c"
   637                           	line	28
   638                           
   639                           ;initializer for main@F9062
   640  0072C4  0001               	dw	(01h)&0ffffh
   641  0072C6  0001               	dw	(01h)&0ffffh
   642  0072C8  0001               	dw	(01h)&0ffffh
   643  0072CA  0001               	dw	(01h)&0ffffh
   644  0072CC  0001               	dw	(01h)&0ffffh
   645  0072CE  0001               	dw	(01h)&0ffffh
   646  0072D0  0001               	dw	(01h)&0ffffh
   647  0072D2  0001               	dw	(01h)&0ffffh
   648  0072D4  0001               	dw	(01h)&0ffffh
   649                           psect	idataBANK1,class=CODE,space=0,delta=1
   650                           global __pidataBANK1
   651  0072D6                     __pidataBANK1:
   652                           	line	21
   653                           
   654                           ;initializer for main@F9048
   655  0072D6  0304               	dw	(0304h)&0ffffh
   656  0072D8  0302               	dw	(0302h)&0ffffh
   657  0072DA  0301               	dw	(0301h)&0ffffh
   658  0072DC  0480               	dw	(0480h)&0ffffh
   659  0072DE  0440               	dw	(0440h)&0ffffh
   660  0072E0  0420               	dw	(0420h)&0ffffh
   661  0072E2  0410               	dw	(0410h)&0ffffh
   662  0072E4  0408               	dw	(0408h)&0ffffh
   663  0072E6  0404               	dw	(0404h)&0ffffh
   664                           	line	22
   665                           
   666                           ;initializer for main@F9050
   667  0072E8  0280               	dw	(0280h)&0ffffh
   668  0072EA  0240               	dw	(0240h)&0ffffh
   669  0072EC  0201               	dw	(0201h)&0ffffh
   670  0072EE  0202               	dw	(0202h)&0ffffh
   671  0072F0  0010               	dw	(010h)&0ffffh
   672  0072F2  0020               	dw	(020h)&0ffffh
   673  0072F4  0002               	dw	(02h)&0ffffh
   674  0072F6  0004               	dw	(04h)&0ffffh
   675  0072F8  0008               	dw	(08h)&0ffffh
   676                           	line	23
   677                           
   678                           ;initializer for main@F9052
   679  0072FA  0402               	dw	(0402h)&0ffffh
   680  0072FC  0401               	dw	(0401h)&0ffffh
   681  0072FE  0601               	dw	(0601h)&0ffffh
   682  007300  0602               	dw	(0602h)&0ffffh
   683  007302  0604               	dw	(0604h)&0ffffh
   684  007304  0608               	dw	(0608h)&0ffffh
   685  007306  0610               	dw	(0610h)&0ffffh
   686  007308  0580               	dw	(0580h)&0ffffh
   687  00730A  0540               	dw	(0540h)&0ffffh
   688                           	line	24
   689                           
   690                           ;initializer for main@F9054
   691  00730C  0308               	dw	(0308h)&0ffffh
   692  00730E  0310               	dw	(0310h)&0ffffh
   693  007310  0320               	dw	(0320h)&0ffffh
   694  007312  0340               	dw	(0340h)&0ffffh
   695  007314  0380               	dw	(0380h)&0ffffh
   696  007316  0101               	dw	(0101h)&0ffffh
   697  007318  0102               	dw	(0102h)&0ffffh
   698  00731A  0104               	dw	(0104h)&0ffffh
   699  00731C  0108               	dw	(0108h)&0ffffh
   700                           	global	main@F9058
   701                           	global	main@F9060
   702                           	global	main@F9064
   703                           	global	main@F9056
   704                           	global	_LATA
   705  0000                     _LATA	set	0xF89
   706                           	global	_LATB
   707  0000                     _LATB	set	0xF8A
   708                           	global	_LATC
   709  0000                     _LATC	set	0xF8B
   710                           	global	_LATD
   711  0000                     _LATD	set	0xF8C
   712                           	global	_LATE
   713  0000                     _LATE	set	0xF8D
   714                           	global	_LATF
   715  0000                     _LATF	set	0xF8E
   716                           	global	_LATG
   717  0000                     _LATG	set	0xF8F
   718                           	global	_PORTA
   719  0000                     _PORTA	set	0xF80
   720                           	global	_PORTB
   721  0000                     _PORTB	set	0xF81
   722                           	global	_PORTC
   723  0000                     _PORTC	set	0xF82
   724                           	global	_PORTD
   725  0000                     _PORTD	set	0xF83
   726                           	global	_PORTE
   727  0000                     _PORTE	set	0xF84
   728                           	global	_PORTF
   729  0000                     _PORTF	set	0xF85
   730                           	global	_PORTG
   731  0000                     _PORTG	set	0xF86
   732                           ; #config settings
   733                           	file	"/tmp/cgtEoGI8e"
   734                           	line	#
   735                           psect	cinit,class=CODE,delta=1,reloc=2
   736                           global __pcinit
   737  00731E                     __pcinit:
   738                           global start_initialization
   739  00731E                     start_initialization:
   740                           
   741                           psect	bssCOMRAM,class=COMRAM,space=1
   742                           global __pbssCOMRAM
   743  000001                     __pbssCOMRAM:
   744  000001                     main@F9058:
   745  000001                            ds      18
   746  000013                     main@F9060:
   747  000013                            ds      18
   748                           psect	dataCOMRAM,class=COMRAM,space=1
   749                           global __pdataCOMRAM
   750  00003D                     __pdataCOMRAM:
   751                           	file	"../switch_pods.c"
   752                           	line	28
   753  00003D                     main@F9062:
   754  00003D                            ds      18
   755                           psect	bssBANK0,class=BANK0,space=1
   756                           global __pbssBANK0
   757  000060                     __pbssBANK0:
   758  000060                     main@F9064:
   759  000060                            ds      18
   760                           psect	bssBANK1,class=BANK1,space=1
   761                           global __pbssBANK1
   762  0001EE                     __pbssBANK1:
   763  0001EE                     main@F9056:
   764  0001EE                            ds      18
   765                           psect	dataBANK1,class=BANK1,space=1
   766                           global __pdataBANK1
   767  0001A6                     __pdataBANK1:
   768                           	file	"../switch_pods.c"
   769                           	line	21
   770  0001A6                     main@F9048:
   771  0001A6                            ds      18
   772                           psect	dataBANK1
   773                           	file	"../switch_pods.c"
   774                           	line	22
   775  0001B8                     main@F9050:
   776  0001B8                            ds      18
   777                           psect	dataBANK1
   778                           	file	"../switch_pods.c"
   779                           	line	23
   780  0001CA                     main@F9052:
   781  0001CA                            ds      18
   782                           psect	dataBANK1
   783                           	file	"../switch_pods.c"
   784                           	line	24
   785  0001DC                     main@F9054:
   786  0001DC                            ds      18
   787                           psect	cinit
   788                           ; Clear objects allocated to BANK1 (18 bytes)
   789                           	global __pbssBANK1
   790  00731E  EE01  F0EE         lfsr	0,__pbssBANK1
   791  007322  0E12               movlw	18
   792  007324                     clear_0:
   793  007324  6AEE               clrf	postinc0,c
   794  007326  06E8               decf	wreg
   795  007328  E1FD               bnz	clear_0
   796                           ; Clear objects allocated to BANK0 (18 bytes)
   797                           	global __pbssBANK0
   798  00732A  EE00  F060         lfsr	0,__pbssBANK0
   799  00732E  0E12               movlw	18
   800  007330                     clear_1:
   801  007330  6AEE               clrf	postinc0,c
   802  007332  06E8               decf	wreg
   803  007334  E1FD               bnz	clear_1
   804                           ; Clear objects allocated to COMRAM (36 bytes)
   805                           	global __pbssCOMRAM
   806  007336  EE00  F001         lfsr	0,__pbssCOMRAM
   807  00733A  0E24               movlw	36
   808  00733C                     clear_2:
   809  00733C  6AEE               clrf	postinc0,c
   810  00733E  06E8               decf	wreg
   811  007340  E1FD               bnz	clear_2
   812                           ; Initialize objects allocated to BANK1 (72 bytes)
   813                           	global __pidataBANK1
   814                           	; load TBLPTR registers with __pidataBANK1
   815  007342  0ED6               	movlw	low (__pidataBANK1)
   816  007344  6EF6               	movwf	tblptrl
   817  007346  0E72               	movlw	high(__pidataBANK1)
   818  007348  6EF7               	movwf	tblptrh
   819  00734A  0E00               	movlw	low highword(__pidataBANK1)
   820  00734C  6EF8               	movwf	tblptru
   821  00734E  EE01  F0A6         	lfsr	0,__pdataBANK1
   822  007352  EE10 F048          	lfsr	1,72
   823  007356                     	copy_data0:
   824  007356  0009               	tblrd	*+
   825  007358  CFF5 FFEE          	movff	tablat, postinc0
   826  00735C  50E5               	movf	postdec1,w
   827  00735E  50E1               	movf	fsr1l,w
   828  007360  E1FA               	bnz	copy_data0
   829                           ; Initialize objects allocated to COMRAM (18 bytes)
   830                           	global __pidataCOMRAM
   831                           	; load TBLPTR registers with __pidataCOMRAM
   832  007362  0EC4               	movlw	low (__pidataCOMRAM)
   833  007364  6EF6               	movwf	tblptrl
   834  007366  0E72               	movlw	high(__pidataCOMRAM)
   835  007368  6EF7               	movwf	tblptrh
   836  00736A  0E00               	movlw	low highword(__pidataCOMRAM)
   837  00736C  6EF8               	movwf	tblptru
   838  00736E  EE00  F03D         	lfsr	0,__pdataCOMRAM
   839  007372  EE10 F012          	lfsr	1,18
   840  007376                     	copy_data1:
   841  007376  0009               	tblrd	*+
   842  007378  CFF5 FFEE          	movff	tablat, postinc0
   843  00737C  50E5               	movf	postdec1,w
   844  00737E  50E1               	movf	fsr1l,w
   845  007380  E1FA               	bnz	copy_data1
   846                           psect cinit,class=CODE,delta=1
   847                           global end_of_initialization
   848                           
   849                           ;End of C runtime variable initialization code
   850                           
   851  007382                     end_of_initialization:
   852  007382  0100               movlb 0
   853  007384  EFF7  F03A         goto _main	;jump to C main() function
   854                           psect	cstackBANK1,class=BANK1,space=1
   855                           global __pcstackBANK1
   856  000100                     __pcstackBANK1:
   857                           	global	main@buttonMask
   858  000100                     main@buttonMask:	; 18 bytes @ 0x0
   859  000100                     	ds   18
   860                           	global	main@relayMask
   861  000112                     main@relayMask:	; 18 bytes @ 0x12
   862  000112                     	ds   18
   863                           	global	main@buttonDown
   864  000124                     main@buttonDown:	; 18 bytes @ 0x24
   865  000124                     	ds   18
   866                           	global	main@buttonEventDown
   867  000136                     main@buttonEventDown:	; 18 bytes @ 0x36
   868  000136                     	ds   18
   869                           	global	main@leftLEDMask
   870  000148                     main@leftLEDMask:	; 18 bytes @ 0x48
   871  000148                     	ds   18
   872                           	global	main@rightLEDMask
   873  00015A                     main@rightLEDMask:	; 18 bytes @ 0x5A
   874  00015A                     	ds   18
   875                           	global	main@buttonLatch
   876  00016C                     main@buttonLatch:	; 18 bytes @ 0x6C
   877  00016C                     	ds   18
   878                           	global	main@buttonState
   879  00017E                     main@buttonState:	; 18 bytes @ 0x7E
   880  00017E                     	ds   18
   881                           	global	main@buttonEventUp
   882  000190                     main@buttonEventUp:	; 18 bytes @ 0x90
   883  000190                     	ds   18
   884                           	global	main@programState
   885  0001A2                     main@programState:	; 2 bytes @ 0xA2
   886  0001A2                     	ds   2
   887                           	global	main@i
   888  0001A4                     main@i:	; 2 bytes @ 0xA4
   889  0001A4                     	ds   2
   890                           psect	cstackCOMRAM,class=COMRAM,space=1
   891                           global __pcstackCOMRAM
   892  000025                     __pcstackCOMRAM:
   893                           	global	?_setupIO
   894  000025                     ?_setupIO:	; 0 bytes @ 0x0
   895                           	global	?__delay_ms
   896  000025                     ?__delay_ms:	; 0 bytes @ 0x0
   897                           	global	?_setOutput
   898  000025                     ?_setOutput:	; 0 bytes @ 0x0
   899                           	global	?_checkButton
   900  000025                     ?_checkButton:	; 1 bytes @ 0x0
   901                           	global	?_main
   902  000025                     ?_main:	; 2 bytes @ 0x0
   903                           	global	setupIO@row
   904  000025                     setupIO@row:	; 2 bytes @ 0x0
   905                           	global	__delay_ms@ms
   906  000025                     __delay_ms@ms:	; 2 bytes @ 0x0
   907                           	global	checkButton@row
   908  000025                     checkButton@row:	; 2 bytes @ 0x0
   909                           	global	setOutput@row
   910  000025                     setOutput@row:	; 2 bytes @ 0x0
   911  000025                     	ds   2
   912                           	global	??_checkButton
   913  000027                     ??_checkButton:	; 0 bytes @ 0x2
   914                           	global	??__delay_ms
   915  000027                     ??__delay_ms:	; 0 bytes @ 0x2
   916                           	global	setupIO@direction
   917  000027                     setupIO@direction:	; 2 bytes @ 0x2
   918                           	global	setOutput@value
   919  000027                     setOutput@value:	; 2 bytes @ 0x2
   920  000027                     	ds   2
   921                           	global	??_setupIO
   922  000029                     ??_setupIO:	; 0 bytes @ 0x4
   923                           	global	??_setOutput
   924  000029                     ??_setOutput:	; 0 bytes @ 0x4
   925                           	global	checkButton@port
   926  000029                     checkButton@port:	; 2 bytes @ 0x4
   927  000029                     	ds   2
   928                           	global	checkButton@state
   929  00002B                     checkButton@state:	; 2 bytes @ 0x6
   930                           	global	setOutput@port
   931  00002B                     setOutput@port:	; 2 bytes @ 0x6
   932  00002B                     	ds   2
   933                           	global	checkButton@mask
   934  00002D                     checkButton@mask:	; 1 bytes @ 0x8
   935                           	global	setOutput@mask
   936  00002D                     setOutput@mask:	; 1 bytes @ 0x8
   937  00002D                     	ds   1
   938                           	global	?_setOutputs
   939  00002E                     ?_setOutputs:	; 0 bytes @ 0x9
   940                           	global	setOutputs@alwayson
   941  00002E                     setOutputs@alwayson:	; 2 bytes @ 0x9
   942  00002E                     	ds   2
   943                           	global	setOutputs@leftled
   944  000030                     setOutputs@leftled:	; 2 bytes @ 0xB
   945  000030                     	ds   2
   946                           	global	setOutputs@rightled
   947  000032                     setOutputs@rightled:	; 2 bytes @ 0xD
   948  000032                     	ds   2
   949                           	global	setOutputs@relay
   950  000034                     setOutputs@relay:	; 2 bytes @ 0xF
   951  000034                     	ds   2
   952                           	global	setOutputs@value
   953  000036                     setOutputs@value:	; 2 bytes @ 0x11
   954  000036                     	ds   2
   955                           	global	??_setOutputs
   956  000038                     ??_setOutputs:	; 0 bytes @ 0x13
   957                           	global	??_main
   958  000038                     ??_main:	; 0 bytes @ 0x13
   959  000038                     	ds   5
   960                           ;!
   961                           ;!Data Sizes:
   962                           ;!    Strings     0
   963                           ;!    Constant    0
   964                           ;!    Data        90
   965                           ;!    BSS         72
   966                           ;!    Persistent  0
   967                           ;!    Stack       0
   968                           ;!
   969                           ;!Auto Spaces:
   970                           ;!    Space          Size  Autos    Used
   971                           ;!    COMRAM           95     24      78
   972                           ;!    BANK0           160      0      18
   973                           ;!    BANK1           256    166     256
   974                           ;!    BANK2           256      0       0
   975                           ;!    BANK3           256      0       0
   976                           ;!    BANK4           256      0       0
   977                           ;!    BANK5           256      0       0
   978                           ;!    BANK6           256      0       0
   979                           ;!    BANK7           256      0       0
   980                           
   981                           ;!
   982                           ;!Pointer List with Targets:
   983                           ;!
   984                           ;!    None.
   985                           
   986                           
   987                           ;!
   988                           ;!Critical Paths under _main in COMRAM
   989                           ;!
   990                           ;!    _main->_setOutputs
   991                           ;!    _setOutputs->_setOutput
   992                           ;!    _setOutputs->_checkButton
   993                           ;!
   994                           ;!Critical Paths under _main in BANK0
   995                           ;!
   996                           ;!    None.
   997                           ;!
   998                           ;!Critical Paths under _main in BANK1
   999                           ;!
  1000                           ;!    None.
  1001                           ;!
  1002                           ;!Critical Paths under _main in BANK2
  1003                           ;!
  1004                           ;!    None.
  1005                           ;!
  1006                           ;!Critical Paths under _main in BANK3
  1007                           ;!
  1008                           ;!    None.
  1009                           ;!
  1010                           ;!Critical Paths under _main in BANK4
  1011                           ;!
  1012                           ;!    None.
  1013                           ;!
  1014                           ;!Critical Paths under _main in BANK5
  1015                           ;!
  1016                           ;!    None.
  1017                           ;!
  1018                           ;!Critical Paths under _main in BANK6
  1019                           ;!
  1020                           ;!    None.
  1021                           ;!
  1022                           ;!Critical Paths under _main in BANK7
  1023                           ;!
  1024                           ;!    None.
  1025                           
  1026 ;;
  1027 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1028 ;;
  1029                           
  1030                           ;!
  1031                           ;!Call Graph Tables:
  1032                           ;!
  1033                           ;! ---------------------------------------------------------------------------------
  1034                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1035                           ;! ---------------------------------------------------------------------------------
  1036                           ;! (0) _main                                               171   171      0    3354
  1037                           ;!                                             19 COMRAM     5     5      0
  1038                           ;!                                              0 BANK1    166   166      0
  1039                           ;!                            _setupIO
  1040                           ;!                          __delay_ms
  1041                           ;!                        _checkButton
  1042                           ;!                         _setOutputs
  1043                           ;! ---------------------------------------------------------------------------------
  1044                           ;! (1) _setupIO                                              4     0      4       0
  1045                           ;!                                              0 COMRAM     4     0      4
  1046                           ;! ---------------------------------------------------------------------------------
  1047                           ;! (1) __delay_ms                                            2     0      2       0
  1048                           ;!                                              0 COMRAM     2     0      2
  1049                           ;! ---------------------------------------------------------------------------------
  1050                           ;! (1) _checkButton                                          9     7      2     252
  1051                           ;!                                              0 COMRAM     9     7      2
  1052                           ;! ---------------------------------------------------------------------------------
  1053                           ;! (1) _setOutputs                                          10     0     10     728
  1054                           ;!                                              9 COMRAM    10     0     10
  1055                           ;!                          _setOutput
  1056                           ;!                        _checkButton (ARG)
  1057                           ;! ---------------------------------------------------------------------------------
  1058                           ;! (2) _setOutput                                            9     5      4     530
  1059                           ;!                                              0 COMRAM     9     5      4
  1060                           ;! ---------------------------------------------------------------------------------
  1061                           ;! Estimated maximum stack depth 2
  1062                           ;! ---------------------------------------------------------------------------------
  1063                           ;!
  1064                           ;! Call Graph Graphs:
  1065                           ;!
  1066                           ;! _main (ROOT)
  1067                           ;!   _setupIO
  1068                           ;!   __delay_ms
  1069                           ;!   _checkButton
  1070                           ;!   _setOutputs
  1071                           ;!     _setOutput
  1072                           ;!     _checkButton (ARG)
  1073                           ;!
  1074                           
  1075                           ;! Address spaces:
  1076                           
  1077                           ;!Name               Size   Autos  Total    Cost      Usage
  1078                           ;!BIGRAM             7FF      0       0      21        0.0%
  1079                           ;!EEDATA             400      0       0       0        0.0%
  1080                           ;!BITBANK7           100      0       0      19        0.0%
  1081                           ;!BANK7              100      0       0      20        0.0%
  1082                           ;!BITBANK6           100      0       0      17        0.0%
  1083                           ;!BANK6              100      0       0      18        0.0%
  1084                           ;!BITBANK5           100      0       0      15        0.0%
  1085                           ;!BANK5              100      0       0      16        0.0%
  1086                           ;!BITBANK4           100      0       0      13        0.0%
  1087                           ;!BANK4              100      0       0      14        0.0%
  1088                           ;!BITBANK3           100      0       0      11        0.0%
  1089                           ;!BANK3              100      0       0      12        0.0%
  1090                           ;!BITBANK2           100      0       0       9        0.0%
  1091                           ;!BANK2              100      0       0      10        0.0%
  1092                           ;!BITBANK1           100      0       0       7        0.0%
  1093                           ;!BANK1              100     A6     100       8      100.0%
  1094                           ;!BITBANK0            A0      0       0       4        0.0%
  1095                           ;!BANK0               A0      0      12       5       11.2%
  1096                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1097                           ;!COMRAM              5F     18      4E       1       82.1%
  1098                           ;!BITSFR_1             0      0       0      40        0.0%
  1099                           ;!SFR_1                0      0       0      40        0.0%
  1100                           ;!BITSFR               0      0       0      40        0.0%
  1101                           ;!SFR                  0      0       0      40        0.0%
  1102                           ;!STACK                0      0       2       2        0.0%
  1103                           ;!NULL                 0      0       0       0        0.0%
  1104                           ;!ABS                  0      0     160       6        0.0%
  1105                           ;!DATA                 0      0     162       3        0.0%
  1106                           ;!CODE                 0      0       0       0        0.0%
  1107                           
  1108                           	global	_main
  1109                           
  1110 ;; *************** function _main *****************
  1111 ;; Defined at:
  1112 ;;		line 16 in file "../switch_pods.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  buttonEventU   18  144[BANK1 ] volatile unsigned int [9
  1117 ;;  buttonState    18  126[BANK1 ] volatile unsigned int [9
  1118 ;;  buttonLatch    18  108[BANK1 ] volatile unsigned int [9
  1119 ;;  rightLEDMask   18   90[BANK1 ] volatile unsigned int [9
  1120 ;;  leftLEDMask    18   72[BANK1 ] volatile unsigned int [9
  1121 ;;  buttonEventD   18   54[BANK1 ] volatile unsigned int [9
  1122 ;;  buttonDown     18   36[BANK1 ] volatile unsigned int [9
  1123 ;;  relayMask      18   18[BANK1 ] volatile unsigned int [9
  1124 ;;  buttonMask     18    0[BANK1 ] volatile unsigned int [9
  1125 ;;  i               2  164[BANK1 ] volatile unsigned int 
  1126 ;;  programState    2  162[BANK1 ] volatile unsigned int 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2   40[COMRAM] unsigned int 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0
  1137 ;;      Locals:         0       0     166       0       0       0       0       0       0
  1138 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1139 ;;      Totals:         5       0     166       0       0       0       0       0       0
  1140 ;;Total ram usage:      171 bytes
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		_setupIO
  1144 ;;		__delay_ms
  1145 ;;		_checkButton
  1146 ;;		_setOutputs
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           psect	text0,class=CODE,space=0,reloc=2
  1152                           global __ptext0
  1153  0075EE                     __ptext0:
  1154                           psect	text0
  1155                           	file	"../switch_pods.c"
  1156                           	line	16
  1157                           	global	__size_of_main
  1158  0000                     	__size_of_main	equ	__end_of_main-_main
  1159                           	
  1160  0075EE                     _main:; BSR set to: 1
  1161                           
  1162                           	opt	stack 29
  1163                           	line	21
  1164                           	
  1165  0075EE                     l1039:
  1166                           ;switch_pods.c: 21: volatile uint16_t buttonMask[9] = {0x0304,0x0302,0x0301,0x0480,0x044
                                 0,0x0420,0x0410,0x0408,0x0404};
  1167  0075EE  EE21  F0A6         	lfsr	2,(main@F9048)	;volatile
  1168  0075F2  EE11  F000         	lfsr	1,(main@buttonMask)	;volatile
  1169  0075F6  0E12               	movlw	18
  1170  0075F8                     u511:
  1171  0075F8  CFDE FFE6          	movff	postinc2,postinc1
  1172  0075FC  2EE8               	decfsz	wreg
  1173  0075FE  D7FC               	goto	u511
  1174                           	line	22
  1175                           ;switch_pods.c: 22: volatile uint16_t leftLEDMask[9] = {0x0280,0x0240,0x0201,0x0202,0x00
                                 10,0x0020,0x0002,0x0004,0x0008};
  1176  007600  EE21  F0B8         	lfsr	2,(main@F9050)	;volatile
  1177  007604  EE11  F048         	lfsr	1,(main@leftLEDMask)	;volatile
  1178  007608  0E12               	movlw	18
  1179  00760A                     u521:
  1180  00760A  CFDE FFE6          	movff	postinc2,postinc1
  1181  00760E  2EE8               	decfsz	wreg
  1182  007610  D7FC               	goto	u521
  1183                           	line	23
  1184                           ;switch_pods.c: 23: volatile uint16_t rightLEDMask[9] = {0x0402,0x0401,0x0601,0x0602,0x0
                                 604,0x0608,0x0610,0x0580,0x0540};
  1185  007612  EE21  F0CA         	lfsr	2,(main@F9052)	;volatile
  1186  007616  EE11  F05A         	lfsr	1,(main@rightLEDMask)	;volatile
  1187  00761A  0E12               	movlw	18
  1188  00761C                     u531:
  1189  00761C  CFDE FFE6          	movff	postinc2,postinc1
  1190  007620  2EE8               	decfsz	wreg
  1191  007622  D7FC               	goto	u531
  1192                           	line	24
  1193                           ;switch_pods.c: 24: volatile uint16_t relayMask[9] = {0x0308,0x0310,0x0320,0x0340,0x0380
                                 ,0x0101,0x0102,0x0104,0x0108};
  1194  007624  EE21  F0DC         	lfsr	2,(main@F9054)	;volatile
  1195  007628  EE11  F012         	lfsr	1,(main@relayMask)	;volatile
  1196  00762C  0E12               	movlw	18
  1197  00762E                     u541:
  1198  00762E  CFDE FFE6          	movff	postinc2,postinc1
  1199  007632  2EE8               	decfsz	wreg
  1200  007634  D7FC               	goto	u541
  1201                           	line	25
  1202                           ;switch_pods.c: 25: volatile uint16_t buttonDown[9] = {0,0,0,0,0,0,0,0,0};
  1203  007636  EE21  F0EE         	lfsr	2,(main@F9056)	;volatile
  1204  00763A  EE11  F024         	lfsr	1,(main@buttonDown)	;volatile
  1205  00763E  0E12               	movlw	18
  1206  007640                     u551:
  1207  007640  CFDE FFE6          	movff	postinc2,postinc1
  1208  007644  2EE8               	decfsz	wreg
  1209  007646  D7FC               	goto	u551
  1210                           	line	26
  1211                           ;switch_pods.c: 26: volatile uint16_t buttonEventDown[9] = {0,0,0,0,0,0,0,0,0};
  1212  007648  EE20  F001         	lfsr	2,(main@F9058)	;volatile
  1213  00764C  EE11  F036         	lfsr	1,(main@buttonEventDown)	;volatile
  1214  007650  0E12               	movlw	18
  1215  007652                     u561:
  1216  007652  CFDE FFE6          	movff	postinc2,postinc1
  1217  007656  2EE8               	decfsz	wreg
  1218  007658  D7FC               	goto	u561
  1219                           	line	27
  1220                           ;switch_pods.c: 27: volatile uint16_t buttonEventUp[9] = {0,0,0,0,0,0,0,0,0};
  1221  00765A  EE20  F013         	lfsr	2,(main@F9060)	;volatile
  1222  00765E  EE11  F090         	lfsr	1,(main@buttonEventUp)	;volatile
  1223  007662  0E12               	movlw	18
  1224  007664                     u571:
  1225  007664  CFDE FFE6          	movff	postinc2,postinc1
  1226  007668  2EE8               	decfsz	wreg
  1227  00766A  D7FC               	goto	u571
  1228                           	line	28
  1229                           ;switch_pods.c: 28: volatile uint16_t buttonLatch[9] = {1,1,1,1,1,1,1,1,1};
  1230  00766C  EE20  F03D         	lfsr	2,(main@F9062)	;volatile
  1231  007670  EE11  F06C         	lfsr	1,(main@buttonLatch)	;volatile
  1232  007674  0E12               	movlw	18
  1233  007676                     u581:
  1234  007676  CFDE FFE6          	movff	postinc2,postinc1
  1235  00767A  2EE8               	decfsz	wreg
  1236  00767C  D7FC               	goto	u581
  1237                           	line	29
  1238                           ;switch_pods.c: 29: volatile uint16_t buttonState[9] = {0,0,0,0,0,0,0,0,0};
  1239  00767E  EE20  F060         	lfsr	2,(main@F9064)	;volatile
  1240  007682  EE11  F07E         	lfsr	1,(main@buttonState)	;volatile
  1241  007686  0E12               	movlw	18
  1242  007688                     u591:
  1243  007688  CFDE FFE6          	movff	postinc2,postinc1
  1244  00768C  2EE8               	decfsz	wreg
  1245  00768E  D7FC               	goto	u591
  1246                           	line	31
  1247                           	
  1248  007690                     l1041:
  1249                           ;switch_pods.c: 30: volatile uint16_t i;
  1250                           ;switch_pods.c: 31: volatile uint16_t programState = 0;
  1251  007690  0E00               	movlw	high(0)
  1252  007692  0101               	movlb	1	; () banked
  1253  007694  0101               	movlb	1	; () banked
  1254  007696  6FA3               	movwf	((main@programState+1))&0ffh	;volatile
  1255  007698  0E00               	movlw	low(0)
  1256  00769A  0101               	movlb	1	; () banked
  1257  00769C  6FA2               	movwf	((main@programState))&0ffh	;volatile
  1258                           	line	44
  1259                           	
  1260  00769E                     l1043:; BSR set to: 1
  1261                           
  1262                           ;switch_pods.c: 44: setupIO(0x0510, 1);
  1263  00769E  0E05               	movlw	high(0510h)
  1264  0076A0  6E26               	movwf	((c:?_setupIO+1)),c
  1265  0076A2  0E10               	movlw	low(0510h)
  1266  0076A4  6E25               	movwf	((c:?_setupIO)),c
  1267  0076A6  0E00               	movlw	high(01h)
  1268  0076A8  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1269  0076AA  0E01               	movlw	low(01h)
  1270  0076AC  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1271  0076AE  EC61  F039         	call	_setupIO	;wreg free
  1272                           	line	45
  1273                           	
  1274  0076B2                     l1045:
  1275                           ;switch_pods.c: 45: setupIO(0x0520, 1);
  1276  0076B2  0E05               	movlw	high(0520h)
  1277  0076B4  6E26               	movwf	((c:?_setupIO+1)),c
  1278  0076B6  0E20               	movlw	low(0520h)
  1279  0076B8  6E25               	movwf	((c:?_setupIO)),c
  1280  0076BA  0E00               	movlw	high(01h)
  1281  0076BC  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1282  0076BE  0E01               	movlw	low(01h)
  1283  0076C0  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1284  0076C2  EC61  F039         	call	_setupIO	;wreg free
  1285                           	line	46
  1286                           	
  1287  0076C6                     l1047:
  1288                           ;switch_pods.c: 46: setupIO(0x0001, 0);
  1289  0076C6  0E00               	movlw	high(01h)
  1290  0076C8  6E26               	movwf	((c:?_setupIO+1)),c
  1291  0076CA  0E01               	movlw	low(01h)
  1292  0076CC  6E25               	movwf	((c:?_setupIO)),c
  1293  0076CE  0E00               	movlw	high(0)
  1294  0076D0  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1295  0076D2  0E00               	movlw	low(0)
  1296  0076D4  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1297  0076D6  EC61  F039         	call	_setupIO	;wreg free
  1298                           	line	48
  1299                           	
  1300  0076DA                     l1049:
  1301                           ;switch_pods.c: 48: for(i=0;i<9;i++)
  1302  0076DA  0E00               	movlw	high(0)
  1303  0076DC  0101               	movlb	1	; () banked
  1304  0076DE  0101               	movlb	1	; () banked
  1305  0076E0  6FA5               	movwf	((main@i+1))&0ffh	;volatile
  1306  0076E2  0E00               	movlw	low(0)
  1307  0076E4  0101               	movlb	1	; () banked
  1308  0076E6  6FA4               	movwf	((main@i))&0ffh	;volatile
  1309                           	
  1310  0076E8                     l1051:; BSR set to: 1
  1311                           
  1312  0076E8  0E09               	movlw	09h
  1313  0076EA  0101               	movlb	1	; () banked
  1314  0076EC  0101               	movlb	1	; () banked
  1315  0076EE  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1316  0076F0  0E00               	movlw	0
  1317  0076F2  0101               	movlb	1	; () banked
  1318  0076F4  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1319  0076F6  A0D8               	btfss	status,0
  1320  0076F8  D001               	goto	u601
  1321  0076FA  D001               	goto	u600
  1322  0076FC                     u601:
  1323  0076FC  D002               	goto	l1055
  1324  0076FE                     u600:
  1325  0076FE  D06E               	goto	l1061
  1326                           	
  1327  007700                     l1053:; BSR set to: 1
  1328                           
  1329  007700  D06D               	goto	l1061
  1330                           	line	49
  1331                           	
  1332  007702                     l59:; BSR set to: 1
  1333                           
  1334                           	line	50
  1335                           	
  1336  007702                     l1055:; BSR set to: 1
  1337                           
  1338                           ;switch_pods.c: 49: {
  1339                           ;switch_pods.c: 50: setupIO(buttonMask[i], 1);
  1340  007702  0101               	movlb	1	; () banked
  1341  007704  90D8               	bcf	status,0
  1342  007706  0101               	movlb	1	; () banked
  1343  007708  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1344  00770A  6E38               	movwf	(??_main+0+0)&0ffh,c
  1345  00770C  0101               	movlb	1	; () banked
  1346  00770E  0E00               	movlw	low(main@buttonMask)	;volatile
  1347  007710  2438               	addwf	(??_main+0+0),c,w
  1348  007712  6ED9               	movwf	c:fsr2l
  1349  007714  6ADA               	clrf	1+c:fsr2l
  1350  007716  0101               	movlb	1	; () banked
  1351  007718  0E01               	movlw	high(main@buttonMask)	;volatile
  1352  00771A  22DA               	addwfc	1+c:fsr2l
  1353  00771C  CFDE F025          	movff	postinc2,(c:?_setupIO)
  1354  007720  CFDD F026          	movff	postdec2,(c:?_setupIO+1)
  1355  007724  0E00               	movlw	high(01h)
  1356  007726  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1357  007728  0E01               	movlw	low(01h)
  1358  00772A  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1359  00772C  EC61  F039         	call	_setupIO	;wreg free
  1360                           	line	51
  1361                           ;switch_pods.c: 51: setupIO(leftLEDMask[i], 0);
  1362  007730  0101               	movlb	1	; () banked
  1363  007732  90D8               	bcf	status,0
  1364  007734  0101               	movlb	1	; () banked
  1365  007736  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1366  007738  6E38               	movwf	(??_main+0+0)&0ffh,c
  1367  00773A  0101               	movlb	1	; () banked
  1368  00773C  0E48               	movlw	low(main@leftLEDMask)	;volatile
  1369  00773E  2438               	addwf	(??_main+0+0),c,w
  1370  007740  6ED9               	movwf	c:fsr2l
  1371  007742  6ADA               	clrf	1+c:fsr2l
  1372  007744  0101               	movlb	1	; () banked
  1373  007746  0E01               	movlw	high(main@leftLEDMask)	;volatile
  1374  007748  22DA               	addwfc	1+c:fsr2l
  1375  00774A  CFDE F025          	movff	postinc2,(c:?_setupIO)
  1376  00774E  CFDD F026          	movff	postdec2,(c:?_setupIO+1)
  1377  007752  0E00               	movlw	high(0)
  1378  007754  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1379  007756  0E00               	movlw	low(0)
  1380  007758  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1381  00775A  EC61  F039         	call	_setupIO	;wreg free
  1382                           	line	52
  1383                           ;switch_pods.c: 52: setupIO(rightLEDMask[i], 0);
  1384  00775E  0101               	movlb	1	; () banked
  1385  007760  90D8               	bcf	status,0
  1386  007762  0101               	movlb	1	; () banked
  1387  007764  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1388  007766  6E38               	movwf	(??_main+0+0)&0ffh,c
  1389  007768  0101               	movlb	1	; () banked
  1390  00776A  0E5A               	movlw	low(main@rightLEDMask)	;volatile
  1391  00776C  2438               	addwf	(??_main+0+0),c,w
  1392  00776E  6ED9               	movwf	c:fsr2l
  1393  007770  6ADA               	clrf	1+c:fsr2l
  1394  007772  0101               	movlb	1	; () banked
  1395  007774  0E01               	movlw	high(main@rightLEDMask)	;volatile
  1396  007776  22DA               	addwfc	1+c:fsr2l
  1397  007778  CFDE F025          	movff	postinc2,(c:?_setupIO)
  1398  00777C  CFDD F026          	movff	postdec2,(c:?_setupIO+1)
  1399  007780  0E00               	movlw	high(0)
  1400  007782  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1401  007784  0E00               	movlw	low(0)
  1402  007786  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1403  007788  EC61  F039         	call	_setupIO	;wreg free
  1404                           	line	53
  1405                           ;switch_pods.c: 53: setupIO(relayMask[i], 0);
  1406  00778C  0101               	movlb	1	; () banked
  1407  00778E  90D8               	bcf	status,0
  1408  007790  0101               	movlb	1	; () banked
  1409  007792  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1410  007794  6E38               	movwf	(??_main+0+0)&0ffh,c
  1411  007796  0101               	movlb	1	; () banked
  1412  007798  0E12               	movlw	low(main@relayMask)	;volatile
  1413  00779A  2438               	addwf	(??_main+0+0),c,w
  1414  00779C  6ED9               	movwf	c:fsr2l
  1415  00779E  6ADA               	clrf	1+c:fsr2l
  1416  0077A0  0101               	movlb	1	; () banked
  1417  0077A2  0E01               	movlw	high(main@relayMask)	;volatile
  1418  0077A4  22DA               	addwfc	1+c:fsr2l
  1419  0077A6  CFDE F025          	movff	postinc2,(c:?_setupIO)
  1420  0077AA  CFDD F026          	movff	postdec2,(c:?_setupIO+1)
  1421  0077AE  0E00               	movlw	high(0)
  1422  0077B0  6E28               	movwf	(1+((c:?_setupIO)+02h)),c
  1423  0077B2  0E00               	movlw	low(0)
  1424  0077B4  6E27               	movwf	(0+((c:?_setupIO)+02h)),c
  1425  0077B6  EC61  F039         	call	_setupIO	;wreg free
  1426                           	line	48
  1427                           	
  1428  0077BA                     l1057:
  1429  0077BA  0101               	movlb	1	; () banked
  1430  0077BC  0101               	movlb	1	; () banked
  1431  0077BE  4BA4               	infsnz	((main@i))&0ffh	;volatile
  1432  0077C0  2BA5               	incf	((main@i+1))&0ffh	;volatile
  1433                           	
  1434  0077C2                     l1059:; BSR set to: 1
  1435                           
  1436  0077C2  0E09               	movlw	09h
  1437  0077C4  0101               	movlb	1	; () banked
  1438  0077C6  0101               	movlb	1	; () banked
  1439  0077C8  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1440  0077CA  0E00               	movlw	0
  1441  0077CC  0101               	movlb	1	; () banked
  1442  0077CE  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1443  0077D0  A0D8               	btfss	status,0
  1444  0077D2  D001               	goto	u611
  1445  0077D4  D001               	goto	u610
  1446  0077D6                     u611:
  1447  0077D6  D795               	goto	l1055
  1448  0077D8                     u610:
  1449  0077D8  D001               	goto	l1061
  1450                           	
  1451  0077DA                     l60:; BSR set to: 1
  1452                           
  1453  0077DA  D000               	goto	l1061
  1454                           	line	60
  1455                           ;switch_pods.c: 57: }
  1456                           ;switch_pods.c: 59: for(;;)
  1457                           	
  1458  0077DC                     l61:; BSR set to: 1
  1459                           
  1460                           	line	61
  1461                           	
  1462  0077DC                     l1061:; BSR set to: 1
  1463                           
  1464                           ;switch_pods.c: 60: {
  1465                           ;switch_pods.c: 61: _delay_ms(20);
  1466  0077DC  0E00               	movlw	high(014h)
  1467  0077DE  6E26               	movwf	((c:?__delay_ms+1)),c
  1468  0077E0  0E14               	movlw	low(014h)
  1469  0077E2  6E25               	movwf	((c:?__delay_ms)),c
  1470  0077E4  EC60  F039         	call	__delay_ms	;wreg free
  1471                           	line	64
  1472                           	
  1473  0077E8                     l1063:
  1474                           ;switch_pods.c: 64: for(i=0;i<9;i++)
  1475  0077E8  0E00               	movlw	high(0)
  1476  0077EA  0101               	movlb	1	; () banked
  1477  0077EC  0101               	movlb	1	; () banked
  1478  0077EE  6FA5               	movwf	((main@i+1))&0ffh	;volatile
  1479  0077F0  0E00               	movlw	low(0)
  1480  0077F2  0101               	movlb	1	; () banked
  1481  0077F4  6FA4               	movwf	((main@i))&0ffh	;volatile
  1482                           	
  1483  0077F6                     l1065:; BSR set to: 1
  1484                           
  1485  0077F6  0E09               	movlw	09h
  1486  0077F8  0101               	movlb	1	; () banked
  1487  0077FA  0101               	movlb	1	; () banked
  1488  0077FC  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1489  0077FE  0E00               	movlw	0
  1490  007800  0101               	movlb	1	; () banked
  1491  007802  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1492  007804  A0D8               	btfss	status,0
  1493  007806  D001               	goto	u621
  1494  007808  D001               	goto	u620
  1495  00780A                     u621:
  1496  00780A  D002               	goto	l1069
  1497  00780C                     u620:
  1498  00780C  D097               	goto	l1083
  1499                           	
  1500  00780E                     l1067:; BSR set to: 1
  1501                           
  1502  00780E  D096               	goto	l1083
  1503                           	line	65
  1504                           	
  1505  007810                     l62:; BSR set to: 1
  1506                           
  1507                           	line	66
  1508                           	
  1509  007810                     l1069:; BSR set to: 1
  1510                           
  1511                           ;switch_pods.c: 65: {
  1512                           ;switch_pods.c: 66: if(checkButton(buttonMask[i]) == 1)
  1513  007810  0101               	movlb	1	; () banked
  1514  007812  90D8               	bcf	status,0
  1515  007814  0101               	movlb	1	; () banked
  1516  007816  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1517  007818  6E38               	movwf	(??_main+0+0)&0ffh,c
  1518  00781A  0101               	movlb	1	; () banked
  1519  00781C  0E00               	movlw	low(main@buttonMask)	;volatile
  1520  00781E  2438               	addwf	(??_main+0+0),c,w
  1521  007820  6ED9               	movwf	c:fsr2l
  1522  007822  6ADA               	clrf	1+c:fsr2l
  1523  007824  0101               	movlb	1	; () banked
  1524  007826  0E01               	movlw	high(main@buttonMask)	;volatile
  1525  007828  22DA               	addwfc	1+c:fsr2l
  1526  00782A  CFDE F025          	movff	postinc2,(c:?_checkButton)
  1527  00782E  CFDD F026          	movff	postdec2,(c:?_checkButton+1)
  1528  007832  ECFE  F039         	call	_checkButton	;wreg free
  1529  007836  6E39               	movwf	(??_main+1+0)&0ffh,c
  1530  007838  0439               	decf	((??_main+1+0)),c,w
  1531  00783A  A4D8               	btfss	status,2
  1532  00783C  D001               	goto	u631
  1533  00783E  D001               	goto	u630
  1534  007840                     u631:
  1535  007840  D036               	goto	l1075
  1536  007842                     u630:
  1537                           	line	68
  1538                           	
  1539  007842                     l1071:
  1540                           ;switch_pods.c: 67: {
  1541                           ;switch_pods.c: 68: if(!buttonDown[i])
  1542  007842  0101               	movlb	1	; () banked
  1543  007844  90D8               	bcf	status,0
  1544  007846  0101               	movlb	1	; () banked
  1545  007848  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1546  00784A  6E38               	movwf	(??_main+0+0)&0ffh,c
  1547  00784C  0101               	movlb	1	; () banked
  1548  00784E  0E24               	movlw	low(main@buttonDown)	;volatile
  1549  007850  2438               	addwf	(??_main+0+0),c,w
  1550  007852  6ED9               	movwf	c:fsr2l
  1551  007854  6ADA               	clrf	1+c:fsr2l
  1552  007856  0101               	movlb	1	; () banked
  1553  007858  0E01               	movlw	high(main@buttonDown)	;volatile
  1554  00785A  22DA               	addwfc	1+c:fsr2l
  1555  00785C  50DE               	movf	postinc2,w
  1556  00785E  10DD               	iorwf	postdec2,w
  1557  007860  A4D8               	btfss	status,2
  1558  007862  D001               	goto	u641
  1559  007864  D001               	goto	u640
  1560  007866                     u641:
  1561  007866  D011               	goto	l65
  1562  007868                     u640:
  1563                           	line	70
  1564                           	
  1565  007868                     l1073:; BSR set to: 1
  1566                           
  1567                           ;switch_pods.c: 69: {
  1568                           ;switch_pods.c: 70: buttonEventDown[i] = 1;
  1569  007868  0101               	movlb	1	; () banked
  1570  00786A  90D8               	bcf	status,0
  1571  00786C  0101               	movlb	1	; () banked
  1572  00786E  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1573  007870  6E38               	movwf	(??_main+0+0)&0ffh,c
  1574  007872  0101               	movlb	1	; () banked
  1575  007874  0E36               	movlw	low(main@buttonEventDown)	;volatile
  1576  007876  2438               	addwf	(??_main+0+0),c,w
  1577  007878  6ED9               	movwf	c:fsr2l
  1578  00787A  6ADA               	clrf	1+c:fsr2l
  1579  00787C  0101               	movlb	1	; () banked
  1580  00787E  0E01               	movlw	high(main@buttonEventDown)	;volatile
  1581  007880  22DA               	addwfc	1+c:fsr2l
  1582  007882  0E01               	movlw	low(01h)
  1583  007884  6EDE               	movwf	postinc2
  1584  007886  0E00               	movlw	high(01h)
  1585  007888  6EDD               	movwf	postdec2
  1586                           	line	71
  1587                           	
  1588  00788A                     l65:; BSR set to: 1
  1589                           
  1590                           	line	72
  1591                           ;switch_pods.c: 71: }
  1592                           ;switch_pods.c: 72: buttonDown[i] = 1;
  1593  00788A  0101               	movlb	1	; () banked
  1594  00788C  90D8               	bcf	status,0
  1595  00788E  0101               	movlb	1	; () banked
  1596  007890  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1597  007892  6E38               	movwf	(??_main+0+0)&0ffh,c
  1598  007894  0101               	movlb	1	; () banked
  1599  007896  0E24               	movlw	low(main@buttonDown)	;volatile
  1600  007898  2438               	addwf	(??_main+0+0),c,w
  1601  00789A  6ED9               	movwf	c:fsr2l
  1602  00789C  6ADA               	clrf	1+c:fsr2l
  1603  00789E  0101               	movlb	1	; () banked
  1604  0078A0  0E01               	movlw	high(main@buttonDown)	;volatile
  1605  0078A2  22DA               	addwfc	1+c:fsr2l
  1606  0078A4  0E01               	movlw	low(01h)
  1607  0078A6  6EDE               	movwf	postinc2
  1608  0078A8  0E00               	movlw	high(01h)
  1609  0078AA  6EDD               	movwf	postdec2
  1610                           	line	73
  1611                           ;switch_pods.c: 73: }
  1612  0078AC  D037               	goto	l1079
  1613                           	line	74
  1614                           	
  1615  0078AE                     l64:; BSR set to: 1
  1616                           
  1617                           	line	76
  1618                           	
  1619  0078AE                     l1075:
  1620                           ;switch_pods.c: 74: else
  1621                           ;switch_pods.c: 75: {
  1622                           ;switch_pods.c: 76: if(buttonDown[i] == 1)
  1623  0078AE  0101               	movlb	1	; () banked
  1624  0078B0  90D8               	bcf	status,0
  1625  0078B2  0101               	movlb	1	; () banked
  1626  0078B4  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1627  0078B6  6E38               	movwf	(??_main+0+0)&0ffh,c
  1628  0078B8  0101               	movlb	1	; () banked
  1629  0078BA  0E24               	movlw	low(main@buttonDown)	;volatile
  1630  0078BC  2438               	addwf	(??_main+0+0),c,w
  1631  0078BE  6ED9               	movwf	c:fsr2l
  1632  0078C0  6ADA               	clrf	1+c:fsr2l
  1633  0078C2  0101               	movlb	1	; () banked
  1634  0078C4  0E01               	movlw	high(main@buttonDown)	;volatile
  1635  0078C6  22DA               	addwfc	1+c:fsr2l
  1636  0078C8  50DE               	movf	postinc2,w
  1637  0078CA  0A01               	xorlw	01h
  1638  0078CC  10DD               	iorwf	postdec2,w
  1639  0078CE  A4D8               	btfss	status,2
  1640  0078D0  D001               	goto	u651
  1641  0078D2  D001               	goto	u650
  1642  0078D4                     u651:
  1643  0078D4  D011               	goto	l67
  1644  0078D6                     u650:
  1645                           	line	78
  1646                           	
  1647  0078D6                     l1077:; BSR set to: 1
  1648                           
  1649                           ;switch_pods.c: 77: {
  1650                           ;switch_pods.c: 78: buttonEventUp[i] = 1;
  1651  0078D6  0101               	movlb	1	; () banked
  1652  0078D8  90D8               	bcf	status,0
  1653  0078DA  0101               	movlb	1	; () banked
  1654  0078DC  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1655  0078DE  6E38               	movwf	(??_main+0+0)&0ffh,c
  1656  0078E0  0101               	movlb	1	; () banked
  1657  0078E2  0E90               	movlw	low(main@buttonEventUp)	;volatile
  1658  0078E4  2438               	addwf	(??_main+0+0),c,w
  1659  0078E6  6ED9               	movwf	c:fsr2l
  1660  0078E8  6ADA               	clrf	1+c:fsr2l
  1661  0078EA  0101               	movlb	1	; () banked
  1662  0078EC  0E01               	movlw	high(main@buttonEventUp)	;volatile
  1663  0078EE  22DA               	addwfc	1+c:fsr2l
  1664  0078F0  0E01               	movlw	low(01h)
  1665  0078F2  6EDE               	movwf	postinc2
  1666  0078F4  0E00               	movlw	high(01h)
  1667  0078F6  6EDD               	movwf	postdec2
  1668                           	line	79
  1669                           	
  1670  0078F8                     l67:; BSR set to: 1
  1671                           
  1672                           	line	80
  1673                           ;switch_pods.c: 79: }
  1674                           ;switch_pods.c: 80: buttonDown[i] = 0;
  1675  0078F8  0101               	movlb	1	; () banked
  1676  0078FA  90D8               	bcf	status,0
  1677  0078FC  0101               	movlb	1	; () banked
  1678  0078FE  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1679  007900  6E38               	movwf	(??_main+0+0)&0ffh,c
  1680  007902  0101               	movlb	1	; () banked
  1681  007904  0E24               	movlw	low(main@buttonDown)	;volatile
  1682  007906  2438               	addwf	(??_main+0+0),c,w
  1683  007908  6ED9               	movwf	c:fsr2l
  1684  00790A  6ADA               	clrf	1+c:fsr2l
  1685  00790C  0101               	movlb	1	; () banked
  1686  00790E  0E01               	movlw	high(main@buttonDown)	;volatile
  1687  007910  22DA               	addwfc	1+c:fsr2l
  1688  007912  0E00               	movlw	low(0)
  1689  007914  6EDE               	movwf	postinc2
  1690  007916  0E00               	movlw	high(0)
  1691  007918  6EDD               	movwf	postdec2
  1692  00791A  D000               	goto	l1079
  1693                           	line	81
  1694                           	
  1695  00791C                     l66:; BSR set to: 1
  1696                           
  1697                           	line	64
  1698                           	
  1699  00791C                     l1079:; BSR set to: 1
  1700                           
  1701  00791C  0101               	movlb	1	; () banked
  1702  00791E  0101               	movlb	1	; () banked
  1703  007920  4BA4               	infsnz	((main@i))&0ffh	;volatile
  1704  007922  2BA5               	incf	((main@i+1))&0ffh	;volatile
  1705                           	
  1706  007924                     l1081:; BSR set to: 1
  1707                           
  1708  007924  0E09               	movlw	09h
  1709  007926  0101               	movlb	1	; () banked
  1710  007928  0101               	movlb	1	; () banked
  1711  00792A  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1712  00792C  0E00               	movlw	0
  1713  00792E  0101               	movlb	1	; () banked
  1714  007930  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1715  007932  A0D8               	btfss	status,0
  1716  007934  D001               	goto	u661
  1717  007936  D001               	goto	u660
  1718  007938                     u661:
  1719  007938  D76B               	goto	l1069
  1720  00793A                     u660:
  1721  00793A  D000               	goto	l1083
  1722                           	
  1723  00793C                     l63:; BSR set to: 1
  1724                           
  1725                           	line	84
  1726                           	
  1727  00793C                     l1083:; BSR set to: 1
  1728                           
  1729                           ;switch_pods.c: 81: }
  1730                           ;switch_pods.c: 82: }
  1731                           ;switch_pods.c: 84: if( checkButton(0x0510) == 1 )
  1732  00793C  0E05               	movlw	high(0510h)
  1733  00793E  6E26               	movwf	((c:?_checkButton+1)),c
  1734  007940  0E10               	movlw	low(0510h)
  1735  007942  6E25               	movwf	((c:?_checkButton)),c
  1736  007944  ECFE  F039         	call	_checkButton	;wreg free
  1737  007948  6E38               	movwf	(??_main+0+0)&0ffh,c
  1738  00794A  0438               	decf	((??_main+0+0)),c,w
  1739  00794C  A4D8               	btfss	status,2
  1740  00794E  D001               	goto	u671
  1741  007950  D001               	goto	u670
  1742  007952                     u671:
  1743  007952  D151               	goto	l1123
  1744  007954                     u670:
  1745                           	line	87
  1746                           	
  1747  007954                     l1085:
  1748                           ;switch_pods.c: 85: {
  1749                           ;switch_pods.c: 87: if( programState == 0 )
  1750  007954  0101               	movlb	1	; () banked
  1751  007956  0101               	movlb	1	; () banked
  1752  007958  51A3               	movf	((main@programState+1))&0ffh,w	;volatile
  1753  00795A  11A2               	iorwf ((main@programState))&0ffh,w	;volatile
  1754                           
  1755  00795C  A4D8               	btfss	status,2
  1756  00795E  D001               	goto	u681
  1757  007960  D001               	goto	u680
  1758  007962                     u681:
  1759  007962  D085               	goto	l69
  1760  007964                     u680:
  1761                           	line	90
  1762                           	
  1763  007964                     l1087:; BSR set to: 1
  1764                           
  1765                           ;switch_pods.c: 88: {
  1766                           ;switch_pods.c: 90: _delay_ms(500);
  1767  007964  0E01               	movlw	high(01F4h)
  1768  007966  6E26               	movwf	((c:?__delay_ms+1)),c
  1769  007968  0EF4               	movlw	low(01F4h)
  1770  00796A  6E25               	movwf	((c:?__delay_ms)),c
  1771  00796C  EC60  F039         	call	__delay_ms	;wreg free
  1772                           	line	93
  1773                           	
  1774  007970                     l1089:
  1775                           ;switch_pods.c: 93: for(i=0;i<9;i++)
  1776  007970  0E00               	movlw	high(0)
  1777  007972  0101               	movlb	1	; () banked
  1778  007974  0101               	movlb	1	; () banked
  1779  007976  6FA5               	movwf	((main@i+1))&0ffh	;volatile
  1780  007978  0E00               	movlw	low(0)
  1781  00797A  0101               	movlb	1	; () banked
  1782  00797C  6FA4               	movwf	((main@i))&0ffh	;volatile
  1783                           	
  1784  00797E                     l1091:; BSR set to: 1
  1785                           
  1786  00797E  0E09               	movlw	09h
  1787  007980  0101               	movlb	1	; () banked
  1788  007982  0101               	movlb	1	; () banked
  1789  007984  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1790  007986  0E00               	movlw	0
  1791  007988  0101               	movlb	1	; () banked
  1792  00798A  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1793  00798C  A0D8               	btfss	status,0
  1794  00798E  D001               	goto	u691
  1795  007990  D001               	goto	u690
  1796  007992                     u691:
  1797  007992  D002               	goto	l1095
  1798  007994                     u690:
  1799  007994  D065               	goto	l1103
  1800                           	
  1801  007996                     l1093:; BSR set to: 1
  1802                           
  1803  007996  D064               	goto	l1103
  1804                           	line	94
  1805                           	
  1806  007998                     l70:; BSR set to: 1
  1807                           
  1808                           	line	95
  1809                           	
  1810  007998                     l1095:; BSR set to: 1
  1811                           
  1812                           ;switch_pods.c: 94: {
  1813                           ;switch_pods.c: 95: setOutputs( checkButton(0x0520), leftLEDMask[i], rightLEDMask[i], 0x
                                 ffff, buttonLatch[i] );
  1814  007998  0E05               	movlw	high(0520h)
  1815  00799A  6E26               	movwf	((c:?_checkButton+1)),c
  1816  00799C  0E20               	movlw	low(0520h)
  1817  00799E  6E25               	movwf	((c:?_checkButton)),c
  1818  0079A0  ECFE  F039         	call	_checkButton	;wreg free
  1819  0079A4  6E38               	movwf	(??_main+0+0)&0ffh,c
  1820  0079A6  5038               	movf	((??_main+0+0)),c,w
  1821  0079A8  6E2E               	movwf	((c:?_setOutputs)),c
  1822  0079AA  6A2F               	clrf	((c:?_setOutputs+1)),c
  1823  0079AC  0101               	movlb	1	; () banked
  1824  0079AE  90D8               	bcf	status,0
  1825  0079B0  0101               	movlb	1	; () banked
  1826  0079B2  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1827  0079B4  6E39               	movwf	(??_main+1+0)&0ffh,c
  1828  0079B6  0101               	movlb	1	; () banked
  1829  0079B8  0E48               	movlw	low(main@leftLEDMask)	;volatile
  1830  0079BA  2439               	addwf	(??_main+1+0),c,w
  1831  0079BC  6ED9               	movwf	c:fsr2l
  1832  0079BE  6ADA               	clrf	1+c:fsr2l
  1833  0079C0  0101               	movlb	1	; () banked
  1834  0079C2  0E01               	movlw	high(main@leftLEDMask)	;volatile
  1835  0079C4  22DA               	addwfc	1+c:fsr2l
  1836  0079C6  CFDE F030          	movff	postinc2,0+((c:?_setOutputs)+02h)
  1837  0079CA  CFDD F031          	movff	postdec2,1+((c:?_setOutputs)+02h)
  1838  0079CE  0101               	movlb	1	; () banked
  1839  0079D0  90D8               	bcf	status,0
  1840  0079D2  0101               	movlb	1	; () banked
  1841  0079D4  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1842  0079D6  6E3A               	movwf	(??_main+2+0)&0ffh,c
  1843  0079D8  0101               	movlb	1	; () banked
  1844  0079DA  0E5A               	movlw	low(main@rightLEDMask)	;volatile
  1845  0079DC  243A               	addwf	(??_main+2+0),c,w
  1846  0079DE  6ED9               	movwf	c:fsr2l
  1847  0079E0  6ADA               	clrf	1+c:fsr2l
  1848  0079E2  0101               	movlb	1	; () banked
  1849  0079E4  0E01               	movlw	high(main@rightLEDMask)	;volatile
  1850  0079E6  22DA               	addwfc	1+c:fsr2l
  1851  0079E8  CFDE F032          	movff	postinc2,0+((c:?_setOutputs)+04h)
  1852  0079EC  CFDD F033          	movff	postdec2,1+((c:?_setOutputs)+04h)
  1853  0079F0  0EFF               	movlw	high(0FFFFh)
  1854  0079F2  6E35               	movwf	(1+((c:?_setOutputs)+06h)),c
  1855  0079F4  0EFF               	movlw	low(0FFFFh)
  1856  0079F6  6E34               	movwf	(0+((c:?_setOutputs)+06h)),c
  1857  0079F8  0101               	movlb	1	; () banked
  1858  0079FA  90D8               	bcf	status,0
  1859  0079FC  0101               	movlb	1	; () banked
  1860  0079FE  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1861  007A00  6E3B               	movwf	(??_main+3+0)&0ffh,c
  1862  007A02  0101               	movlb	1	; () banked
  1863  007A04  0E6C               	movlw	low(main@buttonLatch)	;volatile
  1864  007A06  243B               	addwf	(??_main+3+0),c,w
  1865  007A08  6ED9               	movwf	c:fsr2l
  1866  007A0A  6ADA               	clrf	1+c:fsr2l
  1867  007A0C  0101               	movlb	1	; () banked
  1868  007A0E  0E01               	movlw	high(main@buttonLatch)	;volatile
  1869  007A10  22DA               	addwfc	1+c:fsr2l
  1870  007A12  CFDE F036          	movff	postinc2,0+((c:?_setOutputs)+08h)
  1871  007A16  CFDD F037          	movff	postdec2,1+((c:?_setOutputs)+08h)
  1872  007A1A  ECC4  F039         	call	_setOutputs	;wreg free
  1873                           	line	96
  1874                           	
  1875  007A1E                     l1097:
  1876                           ;switch_pods.c: 96: buttonEventUp[i] = 0;
  1877  007A1E  0101               	movlb	1	; () banked
  1878  007A20  90D8               	bcf	status,0
  1879  007A22  0101               	movlb	1	; () banked
  1880  007A24  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1881  007A26  6E38               	movwf	(??_main+0+0)&0ffh,c
  1882  007A28  0101               	movlb	1	; () banked
  1883  007A2A  0E90               	movlw	low(main@buttonEventUp)	;volatile
  1884  007A2C  2438               	addwf	(??_main+0+0),c,w
  1885  007A2E  6ED9               	movwf	c:fsr2l
  1886  007A30  6ADA               	clrf	1+c:fsr2l
  1887  007A32  0101               	movlb	1	; () banked
  1888  007A34  0E01               	movlw	high(main@buttonEventUp)	;volatile
  1889  007A36  22DA               	addwfc	1+c:fsr2l
  1890  007A38  0E00               	movlw	low(0)
  1891  007A3A  6EDE               	movwf	postinc2
  1892  007A3C  0E00               	movlw	high(0)
  1893  007A3E  6EDD               	movwf	postdec2
  1894                           	line	93
  1895                           	
  1896  007A40                     l1099:; BSR set to: 1
  1897                           
  1898  007A40  0101               	movlb	1	; () banked
  1899  007A42  0101               	movlb	1	; () banked
  1900  007A44  4BA4               	infsnz	((main@i))&0ffh	;volatile
  1901  007A46  2BA5               	incf	((main@i+1))&0ffh	;volatile
  1902                           	
  1903  007A48                     l1101:; BSR set to: 1
  1904                           
  1905  007A48  0E09               	movlw	09h
  1906  007A4A  0101               	movlb	1	; () banked
  1907  007A4C  0101               	movlb	1	; () banked
  1908  007A4E  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1909  007A50  0E00               	movlw	0
  1910  007A52  0101               	movlb	1	; () banked
  1911  007A54  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1912  007A56  A0D8               	btfss	status,0
  1913  007A58  D001               	goto	u701
  1914  007A5A  D001               	goto	u700
  1915  007A5C                     u701:
  1916  007A5C  D79D               	goto	l1095
  1917  007A5E                     u700:
  1918  007A5E  D000               	goto	l1103
  1919                           	
  1920  007A60                     l71:; BSR set to: 1
  1921                           
  1922                           	line	99
  1923                           	
  1924  007A60                     l1103:; BSR set to: 1
  1925                           
  1926                           ;switch_pods.c: 97: }
  1927                           ;switch_pods.c: 99: programState = 1;
  1928  007A60  0E00               	movlw	high(01h)
  1929  007A62  0101               	movlb	1	; () banked
  1930  007A64  0101               	movlb	1	; () banked
  1931  007A66  6FA3               	movwf	((main@programState+1))&0ffh	;volatile
  1932  007A68  0E01               	movlw	low(01h)
  1933  007A6A  0101               	movlb	1	; () banked
  1934  007A6C  6FA2               	movwf	((main@programState))&0ffh	;volatile
  1935                           	line	100
  1936                           	
  1937  007A6E                     l69:; BSR set to: 1
  1938                           
  1939                           	line	103
  1940                           ;switch_pods.c: 100: }
  1941                           ;switch_pods.c: 103: for(i=0;i<9;i++)
  1942  007A6E  0E00               	movlw	high(0)
  1943  007A70  0101               	movlb	1	; () banked
  1944  007A72  0101               	movlb	1	; () banked
  1945  007A74  6FA5               	movwf	((main@i+1))&0ffh	;volatile
  1946  007A76  0E00               	movlw	low(0)
  1947  007A78  0101               	movlb	1	; () banked
  1948  007A7A  6FA4               	movwf	((main@i))&0ffh	;volatile
  1949                           	
  1950  007A7C                     l1105:; BSR set to: 1
  1951                           
  1952  007A7C  0E09               	movlw	09h
  1953  007A7E  0101               	movlb	1	; () banked
  1954  007A80  0101               	movlb	1	; () banked
  1955  007A82  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  1956  007A84  0E00               	movlw	0
  1957  007A86  0101               	movlb	1	; () banked
  1958  007A88  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  1959  007A8A  A0D8               	btfss	status,0
  1960  007A8C  D001               	goto	u711
  1961  007A8E  D001               	goto	u710
  1962  007A90                     u711:
  1963  007A90  D002               	goto	l1109
  1964  007A92                     u710:
  1965  007A92  D6A4               	goto	l1061
  1966                           	
  1967  007A94                     l1107:; BSR set to: 1
  1968                           
  1969  007A94  D6A3               	goto	l1061
  1970                           	line	104
  1971                           	
  1972  007A96                     l72:; BSR set to: 1
  1973                           
  1974                           	line	105
  1975                           	
  1976  007A96                     l1109:; BSR set to: 1
  1977                           
  1978                           ;switch_pods.c: 104: {
  1979                           ;switch_pods.c: 105: if( buttonEventUp[i] == 1 )
  1980  007A96  0101               	movlb	1	; () banked
  1981  007A98  90D8               	bcf	status,0
  1982  007A9A  0101               	movlb	1	; () banked
  1983  007A9C  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  1984  007A9E  6E38               	movwf	(??_main+0+0)&0ffh,c
  1985  007AA0  0101               	movlb	1	; () banked
  1986  007AA2  0E90               	movlw	low(main@buttonEventUp)	;volatile
  1987  007AA4  2438               	addwf	(??_main+0+0),c,w
  1988  007AA6  6ED9               	movwf	c:fsr2l
  1989  007AA8  6ADA               	clrf	1+c:fsr2l
  1990  007AAA  0101               	movlb	1	; () banked
  1991  007AAC  0E01               	movlw	high(main@buttonEventUp)	;volatile
  1992  007AAE  22DA               	addwfc	1+c:fsr2l
  1993  007AB0  50DE               	movf	postinc2,w
  1994  007AB2  0A01               	xorlw	01h
  1995  007AB4  10DD               	iorwf	postdec2,w
  1996  007AB6  A4D8               	btfss	status,2
  1997  007AB8  D001               	goto	u721
  1998  007ABA  D001               	goto	u720
  1999  007ABC                     u721:
  2000  007ABC  D048               	goto	l1117
  2001  007ABE                     u720:
  2002                           	line	107
  2003                           	
  2004  007ABE                     l1111:; BSR set to: 1
  2005                           
  2006                           ;switch_pods.c: 106: {
  2007                           ;switch_pods.c: 107: if( buttonLatch[i] == 0 )
  2008  007ABE  0101               	movlb	1	; () banked
  2009  007AC0  90D8               	bcf	status,0
  2010  007AC2  0101               	movlb	1	; () banked
  2011  007AC4  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2012  007AC6  6E38               	movwf	(??_main+0+0)&0ffh,c
  2013  007AC8  0101               	movlb	1	; () banked
  2014  007ACA  0E6C               	movlw	low(main@buttonLatch)	;volatile
  2015  007ACC  2438               	addwf	(??_main+0+0),c,w
  2016  007ACE  6ED9               	movwf	c:fsr2l
  2017  007AD0  6ADA               	clrf	1+c:fsr2l
  2018  007AD2  0101               	movlb	1	; () banked
  2019  007AD4  0E01               	movlw	high(main@buttonLatch)	;volatile
  2020  007AD6  22DA               	addwfc	1+c:fsr2l
  2021  007AD8  50DE               	movf	postinc2,w
  2022  007ADA  10DD               	iorwf	postdec2,w
  2023  007ADC  A4D8               	btfss	status,2
  2024  007ADE  D001               	goto	u731
  2025  007AE0  D001               	goto	u730
  2026  007AE2                     u731:
  2027  007AE2  D012               	goto	l1115
  2028  007AE4                     u730:
  2029                           	line	109
  2030                           	
  2031  007AE4                     l1113:; BSR set to: 1
  2032                           
  2033                           ;switch_pods.c: 108: {
  2034                           ;switch_pods.c: 109: buttonLatch[i] = 1;
  2035  007AE4  0101               	movlb	1	; () banked
  2036  007AE6  90D8               	bcf	status,0
  2037  007AE8  0101               	movlb	1	; () banked
  2038  007AEA  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2039  007AEC  6E38               	movwf	(??_main+0+0)&0ffh,c
  2040  007AEE  0101               	movlb	1	; () banked
  2041  007AF0  0E6C               	movlw	low(main@buttonLatch)	;volatile
  2042  007AF2  2438               	addwf	(??_main+0+0),c,w
  2043  007AF4  6ED9               	movwf	c:fsr2l
  2044  007AF6  6ADA               	clrf	1+c:fsr2l
  2045  007AF8  0101               	movlb	1	; () banked
  2046  007AFA  0E01               	movlw	high(main@buttonLatch)	;volatile
  2047  007AFC  22DA               	addwfc	1+c:fsr2l
  2048  007AFE  0E01               	movlw	low(01h)
  2049  007B00  6EDE               	movwf	postinc2
  2050  007B02  0E00               	movlw	high(01h)
  2051  007B04  6EDD               	movwf	postdec2
  2052                           	line	110
  2053                           ;switch_pods.c: 110: }
  2054  007B06  D011               	goto	l76
  2055                           	line	111
  2056                           	
  2057  007B08                     l75:; BSR set to: 1
  2058                           
  2059                           	line	113
  2060                           	
  2061  007B08                     l1115:; BSR set to: 1
  2062                           
  2063                           ;switch_pods.c: 111: else
  2064                           ;switch_pods.c: 112: {
  2065                           ;switch_pods.c: 113: buttonLatch[i] = 0;
  2066  007B08  0101               	movlb	1	; () banked
  2067  007B0A  90D8               	bcf	status,0
  2068  007B0C  0101               	movlb	1	; () banked
  2069  007B0E  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2070  007B10  6E38               	movwf	(??_main+0+0)&0ffh,c
  2071  007B12  0101               	movlb	1	; () banked
  2072  007B14  0E6C               	movlw	low(main@buttonLatch)	;volatile
  2073  007B16  2438               	addwf	(??_main+0+0),c,w
  2074  007B18  6ED9               	movwf	c:fsr2l
  2075  007B1A  6ADA               	clrf	1+c:fsr2l
  2076  007B1C  0101               	movlb	1	; () banked
  2077  007B1E  0E01               	movlw	high(main@buttonLatch)	;volatile
  2078  007B20  22DA               	addwfc	1+c:fsr2l
  2079  007B22  0E00               	movlw	low(0)
  2080  007B24  6EDE               	movwf	postinc2
  2081  007B26  0E00               	movlw	high(0)
  2082  007B28  6EDD               	movwf	postdec2
  2083                           	line	114
  2084                           	
  2085  007B2A                     l76:; BSR set to: 1
  2086                           
  2087                           	line	116
  2088                           ;switch_pods.c: 114: }
  2089                           ;switch_pods.c: 116: buttonEventUp[i] = 0;
  2090  007B2A  0101               	movlb	1	; () banked
  2091  007B2C  90D8               	bcf	status,0
  2092  007B2E  0101               	movlb	1	; () banked
  2093  007B30  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2094  007B32  6E38               	movwf	(??_main+0+0)&0ffh,c
  2095  007B34  0101               	movlb	1	; () banked
  2096  007B36  0E90               	movlw	low(main@buttonEventUp)	;volatile
  2097  007B38  2438               	addwf	(??_main+0+0),c,w
  2098  007B3A  6ED9               	movwf	c:fsr2l
  2099  007B3C  6ADA               	clrf	1+c:fsr2l
  2100  007B3E  0101               	movlb	1	; () banked
  2101  007B40  0E01               	movlw	high(main@buttonEventUp)	;volatile
  2102  007B42  22DA               	addwfc	1+c:fsr2l
  2103  007B44  0E00               	movlw	low(0)
  2104  007B46  6EDE               	movwf	postinc2
  2105  007B48  0E00               	movlw	high(0)
  2106  007B4A  6EDD               	movwf	postdec2
  2107  007B4C  D000               	goto	l1117
  2108                           	line	117
  2109                           	
  2110  007B4E                     l74:; BSR set to: 1
  2111                           
  2112                           	line	119
  2113                           	
  2114  007B4E                     l1117:; BSR set to: 1
  2115                           
  2116                           ;switch_pods.c: 117: }
  2117                           ;switch_pods.c: 119: setOutputs( checkButton(0x0520), leftLEDMask[i], rightLEDMask[i], 0
                                 xffff, buttonLatch[i] );
  2118  007B4E  0E05               	movlw	high(0520h)
  2119  007B50  6E26               	movwf	((c:?_checkButton+1)),c
  2120  007B52  0E20               	movlw	low(0520h)
  2121  007B54  6E25               	movwf	((c:?_checkButton)),c
  2122  007B56  ECFE  F039         	call	_checkButton	;wreg free
  2123  007B5A  6E38               	movwf	(??_main+0+0)&0ffh,c
  2124  007B5C  5038               	movf	((??_main+0+0)),c,w
  2125  007B5E  6E2E               	movwf	((c:?_setOutputs)),c
  2126  007B60  6A2F               	clrf	((c:?_setOutputs+1)),c
  2127  007B62  0101               	movlb	1	; () banked
  2128  007B64  90D8               	bcf	status,0
  2129  007B66  0101               	movlb	1	; () banked
  2130  007B68  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2131  007B6A  6E39               	movwf	(??_main+1+0)&0ffh,c
  2132  007B6C  0101               	movlb	1	; () banked
  2133  007B6E  0E48               	movlw	low(main@leftLEDMask)	;volatile
  2134  007B70  2439               	addwf	(??_main+1+0),c,w
  2135  007B72  6ED9               	movwf	c:fsr2l
  2136  007B74  6ADA               	clrf	1+c:fsr2l
  2137  007B76  0101               	movlb	1	; () banked
  2138  007B78  0E01               	movlw	high(main@leftLEDMask)	;volatile
  2139  007B7A  22DA               	addwfc	1+c:fsr2l
  2140  007B7C  CFDE F030          	movff	postinc2,0+((c:?_setOutputs)+02h)
  2141  007B80  CFDD F031          	movff	postdec2,1+((c:?_setOutputs)+02h)
  2142  007B84  0101               	movlb	1	; () banked
  2143  007B86  90D8               	bcf	status,0
  2144  007B88  0101               	movlb	1	; () banked
  2145  007B8A  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2146  007B8C  6E3A               	movwf	(??_main+2+0)&0ffh,c
  2147  007B8E  0101               	movlb	1	; () banked
  2148  007B90  0E5A               	movlw	low(main@rightLEDMask)	;volatile
  2149  007B92  243A               	addwf	(??_main+2+0),c,w
  2150  007B94  6ED9               	movwf	c:fsr2l
  2151  007B96  6ADA               	clrf	1+c:fsr2l
  2152  007B98  0101               	movlb	1	; () banked
  2153  007B9A  0E01               	movlw	high(main@rightLEDMask)	;volatile
  2154  007B9C  22DA               	addwfc	1+c:fsr2l
  2155  007B9E  CFDE F032          	movff	postinc2,0+((c:?_setOutputs)+04h)
  2156  007BA2  CFDD F033          	movff	postdec2,1+((c:?_setOutputs)+04h)
  2157  007BA6  0EFF               	movlw	high(0FFFFh)
  2158  007BA8  6E35               	movwf	(1+((c:?_setOutputs)+06h)),c
  2159  007BAA  0EFF               	movlw	low(0FFFFh)
  2160  007BAC  6E34               	movwf	(0+((c:?_setOutputs)+06h)),c
  2161  007BAE  0101               	movlb	1	; () banked
  2162  007BB0  90D8               	bcf	status,0
  2163  007BB2  0101               	movlb	1	; () banked
  2164  007BB4  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2165  007BB6  6E3B               	movwf	(??_main+3+0)&0ffh,c
  2166  007BB8  0101               	movlb	1	; () banked
  2167  007BBA  0E6C               	movlw	low(main@buttonLatch)	;volatile
  2168  007BBC  243B               	addwf	(??_main+3+0),c,w
  2169  007BBE  6ED9               	movwf	c:fsr2l
  2170  007BC0  6ADA               	clrf	1+c:fsr2l
  2171  007BC2  0101               	movlb	1	; () banked
  2172  007BC4  0E01               	movlw	high(main@buttonLatch)	;volatile
  2173  007BC6  22DA               	addwfc	1+c:fsr2l
  2174  007BC8  CFDE F036          	movff	postinc2,0+((c:?_setOutputs)+08h)
  2175  007BCC  CFDD F037          	movff	postdec2,1+((c:?_setOutputs)+08h)
  2176  007BD0  ECC4  F039         	call	_setOutputs	;wreg free
  2177                           	line	103
  2178                           	
  2179  007BD4                     l1119:
  2180  007BD4  0101               	movlb	1	; () banked
  2181  007BD6  0101               	movlb	1	; () banked
  2182  007BD8  4BA4               	infsnz	((main@i))&0ffh	;volatile
  2183  007BDA  2BA5               	incf	((main@i+1))&0ffh	;volatile
  2184                           	
  2185  007BDC                     l1121:; BSR set to: 1
  2186                           
  2187  007BDC  0E09               	movlw	09h
  2188  007BDE  0101               	movlb	1	; () banked
  2189  007BE0  0101               	movlb	1	; () banked
  2190  007BE2  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  2191  007BE4  0E00               	movlw	0
  2192  007BE6  0101               	movlb	1	; () banked
  2193  007BE8  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  2194  007BEA  A0D8               	btfss	status,0
  2195  007BEC  D001               	goto	u741
  2196  007BEE  D001               	goto	u740
  2197  007BF0                     u741:
  2198  007BF0  D752               	goto	l1109
  2199  007BF2                     u740:
  2200  007BF2  D5F4               	goto	l1061
  2201                           	
  2202  007BF4                     l73:; BSR set to: 1
  2203                           
  2204                           	line	121
  2205                           ;switch_pods.c: 120: }
  2206                           ;switch_pods.c: 121: }
  2207  007BF4  D5F3               	goto	l1061
  2208                           	line	122
  2209                           	
  2210  007BF6                     l68:; BSR set to: 1
  2211                           
  2212                           	line	125
  2213                           	
  2214  007BF6                     l1123:
  2215                           ;switch_pods.c: 122: else
  2216                           ;switch_pods.c: 123: {
  2217                           ;switch_pods.c: 125: if( programState == 1 )
  2218  007BF6  0101               	movlb	1	; () banked
  2219  007BF8  0101               	movlb	1	; () banked
  2220  007BFA  05A2               	decf	((main@programState))&0ffh,w	;volatile
  2221  007BFC  11A3               	iorwf ((main@programState+1))&0ffh,w	;volatile
  2222                           
  2223  007BFE  A4D8               	btfss	status,2
  2224  007C00  D001               	goto	u751
  2225  007C02  D001               	goto	u750
  2226  007C04                     u751:
  2227  007C04  D0A3               	goto	l78
  2228  007C06                     u750:
  2229                           	line	128
  2230                           	
  2231  007C06                     l1125:; BSR set to: 1
  2232                           
  2233                           ;switch_pods.c: 126: {
  2234                           ;switch_pods.c: 128: _delay_ms(500);
  2235  007C06  0E01               	movlw	high(01F4h)
  2236  007C08  6E26               	movwf	((c:?__delay_ms+1)),c
  2237  007C0A  0EF4               	movlw	low(01F4h)
  2238  007C0C  6E25               	movwf	((c:?__delay_ms)),c
  2239  007C0E  EC60  F039         	call	__delay_ms	;wreg free
  2240                           	line	131
  2241                           	
  2242  007C12                     l1127:
  2243                           ;switch_pods.c: 131: for(i=0;i<9;i++)
  2244  007C12  0E00               	movlw	high(0)
  2245  007C14  0101               	movlb	1	; () banked
  2246  007C16  0101               	movlb	1	; () banked
  2247  007C18  6FA5               	movwf	((main@i+1))&0ffh	;volatile
  2248  007C1A  0E00               	movlw	low(0)
  2249  007C1C  0101               	movlb	1	; () banked
  2250  007C1E  6FA4               	movwf	((main@i))&0ffh	;volatile
  2251                           	
  2252  007C20                     l1129:; BSR set to: 1
  2253                           
  2254  007C20  0E09               	movlw	09h
  2255  007C22  0101               	movlb	1	; () banked
  2256  007C24  0101               	movlb	1	; () banked
  2257  007C26  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  2258  007C28  0E00               	movlw	0
  2259  007C2A  0101               	movlb	1	; () banked
  2260  007C2C  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  2261  007C2E  A0D8               	btfss	status,0
  2262  007C30  D001               	goto	u761
  2263  007C32  D001               	goto	u760
  2264  007C34                     u761:
  2265  007C34  D002               	goto	l1133
  2266  007C36                     u760:
  2267  007C36  D083               	goto	l1143
  2268                           	
  2269  007C38                     l1131:; BSR set to: 1
  2270                           
  2271  007C38  D082               	goto	l1143
  2272                           	line	132
  2273                           	
  2274  007C3A                     l79:; BSR set to: 1
  2275                           
  2276                           	line	135
  2277                           	
  2278  007C3A                     l1133:; BSR set to: 1
  2279                           
  2280                           ;switch_pods.c: 132: {
  2281                           ;switch_pods.c: 135: setOutputs( checkButton(0x0520), leftLEDMask[i], rightLEDMask[i], r
                                 elayMask[i], buttonState[i] );
  2282  007C3A  0E05               	movlw	high(0520h)
  2283  007C3C  6E26               	movwf	((c:?_checkButton+1)),c
  2284  007C3E  0E20               	movlw	low(0520h)
  2285  007C40  6E25               	movwf	((c:?_checkButton)),c
  2286  007C42  ECFE  F039         	call	_checkButton	;wreg free
  2287  007C46  6E38               	movwf	(??_main+0+0)&0ffh,c
  2288  007C48  5038               	movf	((??_main+0+0)),c,w
  2289  007C4A  6E2E               	movwf	((c:?_setOutputs)),c
  2290  007C4C  6A2F               	clrf	((c:?_setOutputs+1)),c
  2291  007C4E  0101               	movlb	1	; () banked
  2292  007C50  90D8               	bcf	status,0
  2293  007C52  0101               	movlb	1	; () banked
  2294  007C54  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2295  007C56  6E39               	movwf	(??_main+1+0)&0ffh,c
  2296  007C58  0101               	movlb	1	; () banked
  2297  007C5A  0E48               	movlw	low(main@leftLEDMask)	;volatile
  2298  007C5C  2439               	addwf	(??_main+1+0),c,w
  2299  007C5E  6ED9               	movwf	c:fsr2l
  2300  007C60  6ADA               	clrf	1+c:fsr2l
  2301  007C62  0101               	movlb	1	; () banked
  2302  007C64  0E01               	movlw	high(main@leftLEDMask)	;volatile
  2303  007C66  22DA               	addwfc	1+c:fsr2l
  2304  007C68  CFDE F030          	movff	postinc2,0+((c:?_setOutputs)+02h)
  2305  007C6C  CFDD F031          	movff	postdec2,1+((c:?_setOutputs)+02h)
  2306  007C70  0101               	movlb	1	; () banked
  2307  007C72  90D8               	bcf	status,0
  2308  007C74  0101               	movlb	1	; () banked
  2309  007C76  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2310  007C78  6E3A               	movwf	(??_main+2+0)&0ffh,c
  2311  007C7A  0101               	movlb	1	; () banked
  2312  007C7C  0E5A               	movlw	low(main@rightLEDMask)	;volatile
  2313  007C7E  243A               	addwf	(??_main+2+0),c,w
  2314  007C80  6ED9               	movwf	c:fsr2l
  2315  007C82  6ADA               	clrf	1+c:fsr2l
  2316  007C84  0101               	movlb	1	; () banked
  2317  007C86  0E01               	movlw	high(main@rightLEDMask)	;volatile
  2318  007C88  22DA               	addwfc	1+c:fsr2l
  2319  007C8A  CFDE F032          	movff	postinc2,0+((c:?_setOutputs)+04h)
  2320  007C8E  CFDD F033          	movff	postdec2,1+((c:?_setOutputs)+04h)
  2321  007C92  0101               	movlb	1	; () banked
  2322  007C94  90D8               	bcf	status,0
  2323  007C96  0101               	movlb	1	; () banked
  2324  007C98  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2325  007C9A  6E3B               	movwf	(??_main+3+0)&0ffh,c
  2326  007C9C  0101               	movlb	1	; () banked
  2327  007C9E  0E12               	movlw	low(main@relayMask)	;volatile
  2328  007CA0  243B               	addwf	(??_main+3+0),c,w
  2329  007CA2  6ED9               	movwf	c:fsr2l
  2330  007CA4  6ADA               	clrf	1+c:fsr2l
  2331  007CA6  0101               	movlb	1	; () banked
  2332  007CA8  0E01               	movlw	high(main@relayMask)	;volatile
  2333  007CAA  22DA               	addwfc	1+c:fsr2l
  2334  007CAC  CFDE F034          	movff	postinc2,0+((c:?_setOutputs)+06h)
  2335  007CB0  CFDD F035          	movff	postdec2,1+((c:?_setOutputs)+06h)
  2336  007CB4  0101               	movlb	1	; () banked
  2337  007CB6  90D8               	bcf	status,0
  2338  007CB8  0101               	movlb	1	; () banked
  2339  007CBA  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2340  007CBC  6E3C               	movwf	(??_main+4+0)&0ffh,c
  2341  007CBE  0101               	movlb	1	; () banked
  2342  007CC0  0E7E               	movlw	low(main@buttonState)	;volatile
  2343  007CC2  243C               	addwf	(??_main+4+0),c,w
  2344  007CC4  6ED9               	movwf	c:fsr2l
  2345  007CC6  6ADA               	clrf	1+c:fsr2l
  2346  007CC8  0101               	movlb	1	; () banked
  2347  007CCA  0E01               	movlw	high(main@buttonState)	;volatile
  2348  007CCC  22DA               	addwfc	1+c:fsr2l
  2349  007CCE  CFDE F036          	movff	postinc2,0+((c:?_setOutputs)+08h)
  2350  007CD2  CFDD F037          	movff	postdec2,1+((c:?_setOutputs)+08h)
  2351  007CD6  ECC4  F039         	call	_setOutputs	;wreg free
  2352                           	line	136
  2353                           	
  2354  007CDA                     l1135:
  2355                           ;switch_pods.c: 136: buttonEventDown[i] = 0;
  2356  007CDA  0101               	movlb	1	; () banked
  2357  007CDC  90D8               	bcf	status,0
  2358  007CDE  0101               	movlb	1	; () banked
  2359  007CE0  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2360  007CE2  6E38               	movwf	(??_main+0+0)&0ffh,c
  2361  007CE4  0101               	movlb	1	; () banked
  2362  007CE6  0E36               	movlw	low(main@buttonEventDown)	;volatile
  2363  007CE8  2438               	addwf	(??_main+0+0),c,w
  2364  007CEA  6ED9               	movwf	c:fsr2l
  2365  007CEC  6ADA               	clrf	1+c:fsr2l
  2366  007CEE  0101               	movlb	1	; () banked
  2367  007CF0  0E01               	movlw	high(main@buttonEventDown)	;volatile
  2368  007CF2  22DA               	addwfc	1+c:fsr2l
  2369  007CF4  0E00               	movlw	low(0)
  2370  007CF6  6EDE               	movwf	postinc2
  2371  007CF8  0E00               	movlw	high(0)
  2372  007CFA  6EDD               	movwf	postdec2
  2373                           	line	137
  2374                           	
  2375  007CFC                     l1137:; BSR set to: 1
  2376                           
  2377                           ;switch_pods.c: 137: buttonEventUp[i] = 0;
  2378  007CFC  0101               	movlb	1	; () banked
  2379  007CFE  90D8               	bcf	status,0
  2380  007D00  0101               	movlb	1	; () banked
  2381  007D02  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2382  007D04  6E38               	movwf	(??_main+0+0)&0ffh,c
  2383  007D06  0101               	movlb	1	; () banked
  2384  007D08  0E90               	movlw	low(main@buttonEventUp)	;volatile
  2385  007D0A  2438               	addwf	(??_main+0+0),c,w
  2386  007D0C  6ED9               	movwf	c:fsr2l
  2387  007D0E  6ADA               	clrf	1+c:fsr2l
  2388  007D10  0101               	movlb	1	; () banked
  2389  007D12  0E01               	movlw	high(main@buttonEventUp)	;volatile
  2390  007D14  22DA               	addwfc	1+c:fsr2l
  2391  007D16  0E00               	movlw	low(0)
  2392  007D18  6EDE               	movwf	postinc2
  2393  007D1A  0E00               	movlw	high(0)
  2394  007D1C  6EDD               	movwf	postdec2
  2395                           	line	131
  2396                           	
  2397  007D1E                     l1139:; BSR set to: 1
  2398                           
  2399  007D1E  0101               	movlb	1	; () banked
  2400  007D20  0101               	movlb	1	; () banked
  2401  007D22  4BA4               	infsnz	((main@i))&0ffh	;volatile
  2402  007D24  2BA5               	incf	((main@i+1))&0ffh	;volatile
  2403                           	
  2404  007D26                     l1141:; BSR set to: 1
  2405                           
  2406  007D26  0E09               	movlw	09h
  2407  007D28  0101               	movlb	1	; () banked
  2408  007D2A  0101               	movlb	1	; () banked
  2409  007D2C  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  2410  007D2E  0E00               	movlw	0
  2411  007D30  0101               	movlb	1	; () banked
  2412  007D32  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  2413  007D34  A0D8               	btfss	status,0
  2414  007D36  D001               	goto	u771
  2415  007D38  D001               	goto	u770
  2416  007D3A                     u771:
  2417  007D3A  D77F               	goto	l1133
  2418  007D3C                     u770:
  2419  007D3C  D000               	goto	l1143
  2420                           	
  2421  007D3E                     l80:; BSR set to: 1
  2422                           
  2423                           	line	140
  2424                           	
  2425  007D3E                     l1143:; BSR set to: 1
  2426                           
  2427                           ;switch_pods.c: 138: }
  2428                           ;switch_pods.c: 140: programState = 0;
  2429  007D3E  0E00               	movlw	high(0)
  2430  007D40  0101               	movlb	1	; () banked
  2431  007D42  0101               	movlb	1	; () banked
  2432  007D44  6FA3               	movwf	((main@programState+1))&0ffh	;volatile
  2433  007D46  0E00               	movlw	low(0)
  2434  007D48  0101               	movlb	1	; () banked
  2435  007D4A  6FA2               	movwf	((main@programState))&0ffh	;volatile
  2436                           	line	141
  2437                           	
  2438  007D4C                     l78:; BSR set to: 1
  2439                           
  2440                           	line	144
  2441                           ;switch_pods.c: 141: }
  2442                           ;switch_pods.c: 144: for(i=0;i<9;i++)
  2443  007D4C  0E00               	movlw	high(0)
  2444  007D4E  0101               	movlb	1	; () banked
  2445  007D50  0101               	movlb	1	; () banked
  2446  007D52  6FA5               	movwf	((main@i+1))&0ffh	;volatile
  2447  007D54  0E00               	movlw	low(0)
  2448  007D56  0101               	movlb	1	; () banked
  2449  007D58  6FA4               	movwf	((main@i))&0ffh	;volatile
  2450                           	
  2451  007D5A                     l1145:; BSR set to: 1
  2452                           
  2453  007D5A  0E09               	movlw	09h
  2454  007D5C  0101               	movlb	1	; () banked
  2455  007D5E  0101               	movlb	1	; () banked
  2456  007D60  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  2457  007D62  0E00               	movlw	0
  2458  007D64  0101               	movlb	1	; () banked
  2459  007D66  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  2460  007D68  A0D8               	btfss	status,0
  2461  007D6A  D001               	goto	u781
  2462  007D6C  D001               	goto	u780
  2463  007D6E                     u781:
  2464  007D6E  D002               	goto	l1149
  2465  007D70                     u780:
  2466  007D70  D535               	goto	l1061
  2467                           	
  2468  007D72                     l1147:; BSR set to: 1
  2469                           
  2470  007D72  D534               	goto	l1061
  2471                           	line	145
  2472                           	
  2473  007D74                     l81:; BSR set to: 1
  2474                           
  2475                           	line	146
  2476                           	
  2477  007D74                     l1149:; BSR set to: 1
  2478                           
  2479                           ;switch_pods.c: 145: {
  2480                           ;switch_pods.c: 146: if( buttonLatch[i] == 1 )
  2481  007D74  0101               	movlb	1	; () banked
  2482  007D76  90D8               	bcf	status,0
  2483  007D78  0101               	movlb	1	; () banked
  2484  007D7A  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2485  007D7C  6E38               	movwf	(??_main+0+0)&0ffh,c
  2486  007D7E  0101               	movlb	1	; () banked
  2487  007D80  0E6C               	movlw	low(main@buttonLatch)	;volatile
  2488  007D82  2438               	addwf	(??_main+0+0),c,w
  2489  007D84  6ED9               	movwf	c:fsr2l
  2490  007D86  6ADA               	clrf	1+c:fsr2l
  2491  007D88  0101               	movlb	1	; () banked
  2492  007D8A  0E01               	movlw	high(main@buttonLatch)	;volatile
  2493  007D8C  22DA               	addwfc	1+c:fsr2l
  2494  007D8E  50DE               	movf	postinc2,w
  2495  007D90  0A01               	xorlw	01h
  2496  007D92  10DD               	iorwf	postdec2,w
  2497  007D94  A4D8               	btfss	status,2
  2498  007D96  D001               	goto	u791
  2499  007D98  D001               	goto	u790
  2500  007D9A                     u791:
  2501  007D9A  D05D               	goto	l1159
  2502  007D9C                     u790:
  2503                           	line	149
  2504                           	
  2505  007D9C                     l1151:; BSR set to: 1
  2506                           
  2507                           ;switch_pods.c: 147: {
  2508                           ;switch_pods.c: 149: if( buttonEventUp[i] == 1 )
  2509  007D9C  0101               	movlb	1	; () banked
  2510  007D9E  90D8               	bcf	status,0
  2511  007DA0  0101               	movlb	1	; () banked
  2512  007DA2  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2513  007DA4  6E38               	movwf	(??_main+0+0)&0ffh,c
  2514  007DA6  0101               	movlb	1	; () banked
  2515  007DA8  0E90               	movlw	low(main@buttonEventUp)	;volatile
  2516  007DAA  2438               	addwf	(??_main+0+0),c,w
  2517  007DAC  6ED9               	movwf	c:fsr2l
  2518  007DAE  6ADA               	clrf	1+c:fsr2l
  2519  007DB0  0101               	movlb	1	; () banked
  2520  007DB2  0E01               	movlw	high(main@buttonEventUp)	;volatile
  2521  007DB4  22DA               	addwfc	1+c:fsr2l
  2522  007DB6  50DE               	movf	postinc2,w
  2523  007DB8  0A01               	xorlw	01h
  2524  007DBA  10DD               	iorwf	postdec2,w
  2525  007DBC  A4D8               	btfss	status,2
  2526  007DBE  D001               	goto	u801
  2527  007DC0  D001               	goto	u800
  2528  007DC2                     u801:
  2529  007DC2  D0B7               	goto	l1165
  2530  007DC4                     u800:
  2531                           	line	151
  2532                           	
  2533  007DC4                     l1153:; BSR set to: 1
  2534                           
  2535                           ;switch_pods.c: 150: {
  2536                           ;switch_pods.c: 151: if( buttonState[i] == 0 )
  2537  007DC4  0101               	movlb	1	; () banked
  2538  007DC6  90D8               	bcf	status,0
  2539  007DC8  0101               	movlb	1	; () banked
  2540  007DCA  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2541  007DCC  6E38               	movwf	(??_main+0+0)&0ffh,c
  2542  007DCE  0101               	movlb	1	; () banked
  2543  007DD0  0E7E               	movlw	low(main@buttonState)	;volatile
  2544  007DD2  2438               	addwf	(??_main+0+0),c,w
  2545  007DD4  6ED9               	movwf	c:fsr2l
  2546  007DD6  6ADA               	clrf	1+c:fsr2l
  2547  007DD8  0101               	movlb	1	; () banked
  2548  007DDA  0E01               	movlw	high(main@buttonState)	;volatile
  2549  007DDC  22DA               	addwfc	1+c:fsr2l
  2550  007DDE  50DE               	movf	postinc2,w
  2551  007DE0  10DD               	iorwf	postdec2,w
  2552  007DE2  A4D8               	btfss	status,2
  2553  007DE4  D001               	goto	u811
  2554  007DE6  D001               	goto	u810
  2555  007DE8                     u811:
  2556  007DE8  D012               	goto	l1157
  2557  007DEA                     u810:
  2558                           	line	153
  2559                           	
  2560  007DEA                     l1155:; BSR set to: 1
  2561                           
  2562                           ;switch_pods.c: 152: {
  2563                           ;switch_pods.c: 153: buttonState[i] = 1;
  2564  007DEA  0101               	movlb	1	; () banked
  2565  007DEC  90D8               	bcf	status,0
  2566  007DEE  0101               	movlb	1	; () banked
  2567  007DF0  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2568  007DF2  6E38               	movwf	(??_main+0+0)&0ffh,c
  2569  007DF4  0101               	movlb	1	; () banked
  2570  007DF6  0E7E               	movlw	low(main@buttonState)	;volatile
  2571  007DF8  2438               	addwf	(??_main+0+0),c,w
  2572  007DFA  6ED9               	movwf	c:fsr2l
  2573  007DFC  6ADA               	clrf	1+c:fsr2l
  2574  007DFE  0101               	movlb	1	; () banked
  2575  007E00  0E01               	movlw	high(main@buttonState)	;volatile
  2576  007E02  22DA               	addwfc	1+c:fsr2l
  2577  007E04  0E01               	movlw	low(01h)
  2578  007E06  6EDE               	movwf	postinc2
  2579  007E08  0E00               	movlw	high(01h)
  2580  007E0A  6EDD               	movwf	postdec2
  2581                           	line	154
  2582                           ;switch_pods.c: 154: }
  2583  007E0C  D011               	goto	l86
  2584                           	line	155
  2585                           	
  2586  007E0E                     l85:; BSR set to: 1
  2587                           
  2588                           	line	157
  2589                           	
  2590  007E0E                     l1157:; BSR set to: 1
  2591                           
  2592                           ;switch_pods.c: 155: else
  2593                           ;switch_pods.c: 156: {
  2594                           ;switch_pods.c: 157: buttonState[i] = 0;
  2595  007E0E  0101               	movlb	1	; () banked
  2596  007E10  90D8               	bcf	status,0
  2597  007E12  0101               	movlb	1	; () banked
  2598  007E14  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2599  007E16  6E38               	movwf	(??_main+0+0)&0ffh,c
  2600  007E18  0101               	movlb	1	; () banked
  2601  007E1A  0E7E               	movlw	low(main@buttonState)	;volatile
  2602  007E1C  2438               	addwf	(??_main+0+0),c,w
  2603  007E1E  6ED9               	movwf	c:fsr2l
  2604  007E20  6ADA               	clrf	1+c:fsr2l
  2605  007E22  0101               	movlb	1	; () banked
  2606  007E24  0E01               	movlw	high(main@buttonState)	;volatile
  2607  007E26  22DA               	addwfc	1+c:fsr2l
  2608  007E28  0E00               	movlw	low(0)
  2609  007E2A  6EDE               	movwf	postinc2
  2610  007E2C  0E00               	movlw	high(0)
  2611  007E2E  6EDD               	movwf	postdec2
  2612                           	line	158
  2613                           	
  2614  007E30                     l86:; BSR set to: 1
  2615                           
  2616                           	line	160
  2617                           ;switch_pods.c: 158: }
  2618                           ;switch_pods.c: 160: buttonEventUp[i] = 0;
  2619  007E30  0101               	movlb	1	; () banked
  2620  007E32  90D8               	bcf	status,0
  2621  007E34  0101               	movlb	1	; () banked
  2622  007E36  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2623  007E38  6E38               	movwf	(??_main+0+0)&0ffh,c
  2624  007E3A  0101               	movlb	1	; () banked
  2625  007E3C  0E90               	movlw	low(main@buttonEventUp)	;volatile
  2626  007E3E  2438               	addwf	(??_main+0+0),c,w
  2627  007E40  6ED9               	movwf	c:fsr2l
  2628  007E42  6ADA               	clrf	1+c:fsr2l
  2629  007E44  0101               	movlb	1	; () banked
  2630  007E46  0E01               	movlw	high(main@buttonEventUp)	;volatile
  2631  007E48  22DA               	addwfc	1+c:fsr2l
  2632  007E4A  0E00               	movlw	low(0)
  2633  007E4C  6EDE               	movwf	postinc2
  2634  007E4E  0E00               	movlw	high(0)
  2635  007E50  6EDD               	movwf	postdec2
  2636  007E52  D06F               	goto	l1165
  2637                           	line	161
  2638                           	
  2639  007E54                     l84:; BSR set to: 1
  2640                           
  2641                           	line	162
  2642                           ;switch_pods.c: 161: }
  2643                           ;switch_pods.c: 162: }
  2644  007E54  D06E               	goto	l1165
  2645                           	line	163
  2646                           	
  2647  007E56                     l83:; BSR set to: 1
  2648                           
  2649                           	line	166
  2650                           	
  2651  007E56                     l1159:; BSR set to: 1
  2652                           
  2653                           ;switch_pods.c: 163: else
  2654                           ;switch_pods.c: 164: {
  2655                           ;switch_pods.c: 166: if(buttonEventDown[i] == 1)
  2656  007E56  0101               	movlb	1	; () banked
  2657  007E58  90D8               	bcf	status,0
  2658  007E5A  0101               	movlb	1	; () banked
  2659  007E5C  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2660  007E5E  6E38               	movwf	(??_main+0+0)&0ffh,c
  2661  007E60  0101               	movlb	1	; () banked
  2662  007E62  0E36               	movlw	low(main@buttonEventDown)	;volatile
  2663  007E64  2438               	addwf	(??_main+0+0),c,w
  2664  007E66  6ED9               	movwf	c:fsr2l
  2665  007E68  6ADA               	clrf	1+c:fsr2l
  2666  007E6A  0101               	movlb	1	; () banked
  2667  007E6C  0E01               	movlw	high(main@buttonEventDown)	;volatile
  2668  007E6E  22DA               	addwfc	1+c:fsr2l
  2669  007E70  50DE               	movf	postinc2,w
  2670  007E72  0A01               	xorlw	01h
  2671  007E74  10DD               	iorwf	postdec2,w
  2672  007E76  A4D8               	btfss	status,2
  2673  007E78  D001               	goto	u821
  2674  007E7A  D001               	goto	u820
  2675  007E7C                     u821:
  2676  007E7C  D022               	goto	l88
  2677  007E7E                     u820:
  2678                           	line	168
  2679                           	
  2680  007E7E                     l1161:; BSR set to: 1
  2681                           
  2682                           ;switch_pods.c: 167: {
  2683                           ;switch_pods.c: 168: buttonState[i] = 1;
  2684  007E7E  0101               	movlb	1	; () banked
  2685  007E80  90D8               	bcf	status,0
  2686  007E82  0101               	movlb	1	; () banked
  2687  007E84  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2688  007E86  6E38               	movwf	(??_main+0+0)&0ffh,c
  2689  007E88  0101               	movlb	1	; () banked
  2690  007E8A  0E7E               	movlw	low(main@buttonState)	;volatile
  2691  007E8C  2438               	addwf	(??_main+0+0),c,w
  2692  007E8E  6ED9               	movwf	c:fsr2l
  2693  007E90  6ADA               	clrf	1+c:fsr2l
  2694  007E92  0101               	movlb	1	; () banked
  2695  007E94  0E01               	movlw	high(main@buttonState)	;volatile
  2696  007E96  22DA               	addwfc	1+c:fsr2l
  2697  007E98  0E01               	movlw	low(01h)
  2698  007E9A  6EDE               	movwf	postinc2
  2699  007E9C  0E00               	movlw	high(01h)
  2700  007E9E  6EDD               	movwf	postdec2
  2701                           	line	169
  2702                           ;switch_pods.c: 169: buttonEventDown[i] = 0;
  2703  007EA0  0101               	movlb	1	; () banked
  2704  007EA2  90D8               	bcf	status,0
  2705  007EA4  0101               	movlb	1	; () banked
  2706  007EA6  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2707  007EA8  6E38               	movwf	(??_main+0+0)&0ffh,c
  2708  007EAA  0101               	movlb	1	; () banked
  2709  007EAC  0E36               	movlw	low(main@buttonEventDown)	;volatile
  2710  007EAE  2438               	addwf	(??_main+0+0),c,w
  2711  007EB0  6ED9               	movwf	c:fsr2l
  2712  007EB2  6ADA               	clrf	1+c:fsr2l
  2713  007EB4  0101               	movlb	1	; () banked
  2714  007EB6  0E01               	movlw	high(main@buttonEventDown)	;volatile
  2715  007EB8  22DA               	addwfc	1+c:fsr2l
  2716  007EBA  0E00               	movlw	low(0)
  2717  007EBC  6EDE               	movwf	postinc2
  2718  007EBE  0E00               	movlw	high(0)
  2719  007EC0  6EDD               	movwf	postdec2
  2720                           	line	170
  2721                           	
  2722  007EC2                     l88:; BSR set to: 1
  2723                           
  2724                           	line	172
  2725                           ;switch_pods.c: 170: }
  2726                           ;switch_pods.c: 172: if(buttonEventUp[i] == 1)
  2727  007EC2  0101               	movlb	1	; () banked
  2728  007EC4  90D8               	bcf	status,0
  2729  007EC6  0101               	movlb	1	; () banked
  2730  007EC8  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2731  007ECA  6E38               	movwf	(??_main+0+0)&0ffh,c
  2732  007ECC  0101               	movlb	1	; () banked
  2733  007ECE  0E90               	movlw	low(main@buttonEventUp)	;volatile
  2734  007ED0  2438               	addwf	(??_main+0+0),c,w
  2735  007ED2  6ED9               	movwf	c:fsr2l
  2736  007ED4  6ADA               	clrf	1+c:fsr2l
  2737  007ED6  0101               	movlb	1	; () banked
  2738  007ED8  0E01               	movlw	high(main@buttonEventUp)	;volatile
  2739  007EDA  22DA               	addwfc	1+c:fsr2l
  2740  007EDC  50DE               	movf	postinc2,w
  2741  007EDE  0A01               	xorlw	01h
  2742  007EE0  10DD               	iorwf	postdec2,w
  2743  007EE2  A4D8               	btfss	status,2
  2744  007EE4  D001               	goto	u831
  2745  007EE6  D001               	goto	u830
  2746  007EE8                     u831:
  2747  007EE8  D024               	goto	l1165
  2748  007EEA                     u830:
  2749                           	line	174
  2750                           	
  2751  007EEA                     l1163:; BSR set to: 1
  2752                           
  2753                           ;switch_pods.c: 173: {
  2754                           ;switch_pods.c: 174: buttonState[i] = 0;
  2755  007EEA  0101               	movlb	1	; () banked
  2756  007EEC  90D8               	bcf	status,0
  2757  007EEE  0101               	movlb	1	; () banked
  2758  007EF0  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2759  007EF2  6E38               	movwf	(??_main+0+0)&0ffh,c
  2760  007EF4  0101               	movlb	1	; () banked
  2761  007EF6  0E7E               	movlw	low(main@buttonState)	;volatile
  2762  007EF8  2438               	addwf	(??_main+0+0),c,w
  2763  007EFA  6ED9               	movwf	c:fsr2l
  2764  007EFC  6ADA               	clrf	1+c:fsr2l
  2765  007EFE  0101               	movlb	1	; () banked
  2766  007F00  0E01               	movlw	high(main@buttonState)	;volatile
  2767  007F02  22DA               	addwfc	1+c:fsr2l
  2768  007F04  0E00               	movlw	low(0)
  2769  007F06  6EDE               	movwf	postinc2
  2770  007F08  0E00               	movlw	high(0)
  2771  007F0A  6EDD               	movwf	postdec2
  2772                           	line	175
  2773                           ;switch_pods.c: 175: buttonEventUp[i] = 0;
  2774  007F0C  0101               	movlb	1	; () banked
  2775  007F0E  90D8               	bcf	status,0
  2776  007F10  0101               	movlb	1	; () banked
  2777  007F12  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2778  007F14  6E38               	movwf	(??_main+0+0)&0ffh,c
  2779  007F16  0101               	movlb	1	; () banked
  2780  007F18  0E90               	movlw	low(main@buttonEventUp)	;volatile
  2781  007F1A  2438               	addwf	(??_main+0+0),c,w
  2782  007F1C  6ED9               	movwf	c:fsr2l
  2783  007F1E  6ADA               	clrf	1+c:fsr2l
  2784  007F20  0101               	movlb	1	; () banked
  2785  007F22  0E01               	movlw	high(main@buttonEventUp)	;volatile
  2786  007F24  22DA               	addwfc	1+c:fsr2l
  2787  007F26  0E00               	movlw	low(0)
  2788  007F28  6EDE               	movwf	postinc2
  2789  007F2A  0E00               	movlw	high(0)
  2790  007F2C  6EDD               	movwf	postdec2
  2791  007F2E  D001               	goto	l1165
  2792                           	line	176
  2793                           	
  2794  007F30                     l89:; BSR set to: 1
  2795                           
  2796  007F30  D000               	goto	l1165
  2797                           	line	177
  2798                           	
  2799  007F32                     l87:; BSR set to: 1
  2800                           
  2801                           	line	179
  2802                           	
  2803  007F32                     l1165:; BSR set to: 1
  2804                           
  2805                           ;switch_pods.c: 176: }
  2806                           ;switch_pods.c: 177: }
  2807                           ;switch_pods.c: 179: setOutputs( checkButton(0x0520), leftLEDMask[i], rightLEDMask[i], r
                                 elayMask[i], buttonState[i] );
  2808  007F32  0E05               	movlw	high(0520h)
  2809  007F34  6E26               	movwf	((c:?_checkButton+1)),c
  2810  007F36  0E20               	movlw	low(0520h)
  2811  007F38  6E25               	movwf	((c:?_checkButton)),c
  2812  007F3A  ECFE  F039         	call	_checkButton	;wreg free
  2813  007F3E  6E38               	movwf	(??_main+0+0)&0ffh,c
  2814  007F40  5038               	movf	((??_main+0+0)),c,w
  2815  007F42  6E2E               	movwf	((c:?_setOutputs)),c
  2816  007F44  6A2F               	clrf	((c:?_setOutputs+1)),c
  2817  007F46  0101               	movlb	1	; () banked
  2818  007F48  90D8               	bcf	status,0
  2819  007F4A  0101               	movlb	1	; () banked
  2820  007F4C  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2821  007F4E  6E39               	movwf	(??_main+1+0)&0ffh,c
  2822  007F50  0101               	movlb	1	; () banked
  2823  007F52  0E48               	movlw	low(main@leftLEDMask)	;volatile
  2824  007F54  2439               	addwf	(??_main+1+0),c,w
  2825  007F56  6ED9               	movwf	c:fsr2l
  2826  007F58  6ADA               	clrf	1+c:fsr2l
  2827  007F5A  0101               	movlb	1	; () banked
  2828  007F5C  0E01               	movlw	high(main@leftLEDMask)	;volatile
  2829  007F5E  22DA               	addwfc	1+c:fsr2l
  2830  007F60  CFDE F030          	movff	postinc2,0+((c:?_setOutputs)+02h)
  2831  007F64  CFDD F031          	movff	postdec2,1+((c:?_setOutputs)+02h)
  2832  007F68  0101               	movlb	1	; () banked
  2833  007F6A  90D8               	bcf	status,0
  2834  007F6C  0101               	movlb	1	; () banked
  2835  007F6E  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2836  007F70  6E3A               	movwf	(??_main+2+0)&0ffh,c
  2837  007F72  0101               	movlb	1	; () banked
  2838  007F74  0E5A               	movlw	low(main@rightLEDMask)	;volatile
  2839  007F76  243A               	addwf	(??_main+2+0),c,w
  2840  007F78  6ED9               	movwf	c:fsr2l
  2841  007F7A  6ADA               	clrf	1+c:fsr2l
  2842  007F7C  0101               	movlb	1	; () banked
  2843  007F7E  0E01               	movlw	high(main@rightLEDMask)	;volatile
  2844  007F80  22DA               	addwfc	1+c:fsr2l
  2845  007F82  CFDE F032          	movff	postinc2,0+((c:?_setOutputs)+04h)
  2846  007F86  CFDD F033          	movff	postdec2,1+((c:?_setOutputs)+04h)
  2847  007F8A  0101               	movlb	1	; () banked
  2848  007F8C  90D8               	bcf	status,0
  2849  007F8E  0101               	movlb	1	; () banked
  2850  007F90  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2851  007F92  6E3B               	movwf	(??_main+3+0)&0ffh,c
  2852  007F94  0101               	movlb	1	; () banked
  2853  007F96  0E12               	movlw	low(main@relayMask)	;volatile
  2854  007F98  243B               	addwf	(??_main+3+0),c,w
  2855  007F9A  6ED9               	movwf	c:fsr2l
  2856  007F9C  6ADA               	clrf	1+c:fsr2l
  2857  007F9E  0101               	movlb	1	; () banked
  2858  007FA0  0E01               	movlw	high(main@relayMask)	;volatile
  2859  007FA2  22DA               	addwfc	1+c:fsr2l
  2860  007FA4  CFDE F034          	movff	postinc2,0+((c:?_setOutputs)+06h)
  2861  007FA8  CFDD F035          	movff	postdec2,1+((c:?_setOutputs)+06h)
  2862  007FAC  0101               	movlb	1	; () banked
  2863  007FAE  90D8               	bcf	status,0
  2864  007FB0  0101               	movlb	1	; () banked
  2865  007FB2  35A4               	rlcf	((main@i))&0ffh,w	;volatile
  2866  007FB4  6E3C               	movwf	(??_main+4+0)&0ffh,c
  2867  007FB6  0101               	movlb	1	; () banked
  2868  007FB8  0E7E               	movlw	low(main@buttonState)	;volatile
  2869  007FBA  243C               	addwf	(??_main+4+0),c,w
  2870  007FBC  6ED9               	movwf	c:fsr2l
  2871  007FBE  6ADA               	clrf	1+c:fsr2l
  2872  007FC0  0101               	movlb	1	; () banked
  2873  007FC2  0E01               	movlw	high(main@buttonState)	;volatile
  2874  007FC4  22DA               	addwfc	1+c:fsr2l
  2875  007FC6  CFDE F036          	movff	postinc2,0+((c:?_setOutputs)+08h)
  2876  007FCA  CFDD F037          	movff	postdec2,1+((c:?_setOutputs)+08h)
  2877  007FCE  ECC4  F039         	call	_setOutputs	;wreg free
  2878                           	line	144
  2879                           	
  2880  007FD2                     l1167:
  2881  007FD2  0101               	movlb	1	; () banked
  2882  007FD4  0101               	movlb	1	; () banked
  2883  007FD6  4BA4               	infsnz	((main@i))&0ffh	;volatile
  2884  007FD8  2BA5               	incf	((main@i+1))&0ffh	;volatile
  2885                           	
  2886  007FDA                     l1169:; BSR set to: 1
  2887                           
  2888  007FDA  0E09               	movlw	09h
  2889  007FDC  0101               	movlb	1	; () banked
  2890  007FDE  0101               	movlb	1	; () banked
  2891  007FE0  5DA4               	subwf	((main@i))&0ffh,w	;volatile
  2892  007FE2  0E00               	movlw	0
  2893  007FE4  0101               	movlb	1	; () banked
  2894  007FE6  59A5               	subwfb	((main@i+1))&0ffh,w	;volatile
  2895  007FE8  A0D8               	btfss	status,0
  2896  007FEA  D001               	goto	u841
  2897  007FEC  D001               	goto	u840
  2898  007FEE                     u841:
  2899  007FEE  D6C2               	goto	l1149
  2900  007FF0                     u840:
  2901  007FF0  EFEE  F03B         	goto	l1061
  2902                           	
  2903  007FF4                     l82:; BSR set to: 1
  2904                           
  2905  007FF4  EFEE  F03B         	goto	l1061
  2906                           	line	181
  2907                           	
  2908  007FF8                     l77:; BSR set to: 1
  2909                           
  2910                           	line	183
  2911                           ;switch_pods.c: 180: }
  2912                           ;switch_pods.c: 181: }
  2913                           ;switch_pods.c: 183: }
  2914  007FF8  EFEE  F03B         	goto	l1061
  2915                           	
  2916  007FFC                     l90:; BSR set to: 1
  2917                           
  2918                           	line	184
  2919                           	
  2920  007FFC                     l91:; BSR set to: 1
  2921                           
  2922                           	global	start
  2923  007FFC  EF00  F000         	goto	start
  2924                           	opt stack 0
  2925                           GLOBAL	__end_of_main
  2926  008000                     	__end_of_main:
  2927                           	signat	_main,90
  2928                           	global	_setupIO
  2929                           
  2930 ;; *************** function _setupIO *****************
  2931 ;; Defined at:
  2932 ;;		line 9 in file "../switch_pods.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  row             2    0[COMRAM] unsigned int 
  2935 ;;  direction       2    2[COMRAM] unsigned int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;		None               void
  2940 ;; Registers used:
  2941 ;;		None
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2947 ;;      Params:         4       0       0       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2950 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2951 ;;Total ram usage:        4 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           psect	text1,class=CODE,space=0,reloc=2
  2960                           global __ptext1
  2961  0072C2                     __ptext1:
  2962                           psect	text1
  2963                           	file	"../switch_pods.c"
  2964                           	line	9
  2965                           	global	__size_of_setupIO
  2966  0000                     	__size_of_setupIO	equ	__end_of_setupIO-_setupIO
  2967                           	
  2968  0072C2                     _setupIO:; BSR set to: 1
  2969                           
  2970                           	opt	stack 30
  2971                           	line	10
  2972                           	
  2973  0072C2                     l35:
  2974  0072C2  0012               	return
  2975                           	opt stack 0
  2976                           GLOBAL	__end_of_setupIO
  2977  0072C4                     	__end_of_setupIO:
  2978                           	signat	_setupIO,8312
  2979                           	global	__delay_ms
  2980                           
  2981 ;; *************** function __delay_ms *****************
  2982 ;; Defined at:
  2983 ;;		line 12 in file "../switch_pods.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  ms              2    0[COMRAM] unsigned int 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		None
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2997 ;;      Params:         2       0       0       0       0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3000 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           psect	text2,class=CODE,space=0,reloc=2
  3010                           global __ptext2
  3011  0072C0                     __ptext2:
  3012                           psect	text2
  3013                           	file	"../switch_pods.c"
  3014                           	line	12
  3015                           	global	__size_of__delay_ms
  3016  0000                     	__size_of__delay_ms	equ	__end_of__delay_ms-__delay_ms
  3017                           	
  3018  0072C0                     __delay_ms:
  3019                           	opt	stack 30
  3020                           	line	13
  3021                           	
  3022  0072C0                     l38:
  3023  0072C0  0012               	return
  3024                           	opt stack 0
  3025                           GLOBAL	__end_of__delay_ms
  3026  0072C2                     	__end_of__delay_ms:
  3027                           	signat	__delay_ms,4216
  3028                           	global	_checkButton
  3029                           
  3030 ;; *************** function _checkButton *****************
  3031 ;; Defined at:
  3032 ;;		line 187 in file "../switch_pods.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  row             2    0[COMRAM] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  state           2    6[COMRAM] volatile unsigned int 
  3037 ;;  port            2    4[COMRAM] volatile unsigned int 
  3038 ;;  mask            1    8[COMRAM] volatile unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      unsigned char 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3048 ;;      Params:         2       0       0       0       0       0       0       0       0
  3049 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3050 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3051 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3052 ;;Total ram usage:        9 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           psect	text3,class=CODE,space=0,reloc=2
  3061                           global __ptext3
  3062  0073FC                     __ptext3:
  3063                           psect	text3
  3064                           	file	"../switch_pods.c"
  3065                           	line	187
  3066                           	global	__size_of_checkButton
  3067  0000                     	__size_of_checkButton	equ	__end_of_checkButton-_checkButton
  3068                           	
  3069  0073FC                     _checkButton:
  3070                           	opt	stack 30
  3071                           	line	190
  3072                           	
  3073  0073FC                     l953:
  3074                           ;switch_pods.c: 188: volatile uint16_t port;
  3075                           ;switch_pods.c: 189: volatile unsigned char mask;
  3076                           ;switch_pods.c: 190: volatile uint16_t state = 0;
  3077  0073FC  0E00               	movlw	high(0)
  3078  0073FE  6E2C               	movwf	((c:checkButton@state+1)),c	;volatile
  3079  007400  0E00               	movlw	low(0)
  3080  007402  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3081                           	line	192
  3082                           ;switch_pods.c: 192: port = (row >> 8);
  3083  007404  5026               	movf	((c:checkButton@row+1)),c,w
  3084  007406  6E29               	movwf	((c:checkButton@port)),c	;volatile
  3085  007408  6A2A               	clrf	((c:checkButton@port+1)),c	;volatile
  3086                           	line	193
  3087                           	
  3088  00740A                     l955:
  3089                           ;switch_pods.c: 193: mask = (char)(row & 0x00FF);
  3090  00740A  C025  F02D         	movff	(c:checkButton@row),(c:checkButton@mask)	;volatile
  3091                           	line	195
  3092                           ;switch_pods.c: 195: switch( port )
  3093  00740E  D041               	goto	l973
  3094                           	line	197
  3095                           ;switch_pods.c: 196: {
  3096                           ;switch_pods.c: 197: case 0:
  3097                           	
  3098  007410                     l95:
  3099                           	line	198
  3100                           	
  3101  007410                     l957:
  3102                           ;switch_pods.c: 198: state = (LATA & mask) ? 0 : 1;
  3103  007410  5089               	movf	((c:3977)),c,w	;volatile
  3104  007412  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3105  007414  0900               	iorlw	0
  3106  007416  0E00               	movlw	0
  3107  007418  B4D8               	btfsc	status,2
  3108  00741A  0E01               	movlw	1
  3109  00741C  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3110  00741E  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3111                           	line	199
  3112                           ;switch_pods.c: 199: break;
  3113  007420  D058               	goto	l975
  3114                           	line	200
  3115                           ;switch_pods.c: 200: case 1:
  3116                           	
  3117  007422                     l97:
  3118                           	line	201
  3119                           	
  3120  007422                     l959:
  3121                           ;switch_pods.c: 201: state = (LATB & mask) ? 0 : 1;
  3122  007422  508A               	movf	((c:3978)),c,w	;volatile
  3123  007424  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3124  007426  0900               	iorlw	0
  3125  007428  0E00               	movlw	0
  3126  00742A  B4D8               	btfsc	status,2
  3127  00742C  0E01               	movlw	1
  3128  00742E  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3129  007430  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3130                           	line	202
  3131                           ;switch_pods.c: 202: break;
  3132  007432  D04F               	goto	l975
  3133                           	line	203
  3134                           ;switch_pods.c: 203: case 2:
  3135                           	
  3136  007434                     l98:
  3137                           	line	204
  3138                           	
  3139  007434                     l961:
  3140                           ;switch_pods.c: 204: state = (LATC & mask) ? 0 : 1;
  3141  007434  508B               	movf	((c:3979)),c,w	;volatile
  3142  007436  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3143  007438  0900               	iorlw	0
  3144  00743A  0E00               	movlw	0
  3145  00743C  B4D8               	btfsc	status,2
  3146  00743E  0E01               	movlw	1
  3147  007440  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3148  007442  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3149                           	line	205
  3150                           ;switch_pods.c: 205: break;
  3151  007444  D046               	goto	l975
  3152                           	line	206
  3153                           ;switch_pods.c: 206: case 3:
  3154                           	
  3155  007446                     l99:
  3156                           	line	207
  3157                           	
  3158  007446                     l963:
  3159                           ;switch_pods.c: 207: state = (LATD & mask) ? 0 : 1;
  3160  007446  508C               	movf	((c:3980)),c,w	;volatile
  3161  007448  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3162  00744A  0900               	iorlw	0
  3163  00744C  0E00               	movlw	0
  3164  00744E  B4D8               	btfsc	status,2
  3165  007450  0E01               	movlw	1
  3166  007452  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3167  007454  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3168                           	line	208
  3169                           ;switch_pods.c: 208: break;
  3170  007456  D03D               	goto	l975
  3171                           	line	209
  3172                           ;switch_pods.c: 209: case 4:
  3173                           	
  3174  007458                     l100:
  3175                           	line	210
  3176                           	
  3177  007458                     l965:
  3178                           ;switch_pods.c: 210: state = (LATE & mask) ? 0 : 1;
  3179  007458  508D               	movf	((c:3981)),c,w	;volatile
  3180  00745A  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3181  00745C  0900               	iorlw	0
  3182  00745E  0E00               	movlw	0
  3183  007460  B4D8               	btfsc	status,2
  3184  007462  0E01               	movlw	1
  3185  007464  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3186  007466  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3187                           	line	211
  3188                           ;switch_pods.c: 211: break;
  3189  007468  D034               	goto	l975
  3190                           	line	212
  3191                           ;switch_pods.c: 212: case 5:
  3192                           	
  3193  00746A                     l101:
  3194                           	line	213
  3195                           	
  3196  00746A                     l967:
  3197                           ;switch_pods.c: 213: state = (LATF & mask) ? 0 : 1;
  3198  00746A  508E               	movf	((c:3982)),c,w	;volatile
  3199  00746C  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3200  00746E  0900               	iorlw	0
  3201  007470  0E00               	movlw	0
  3202  007472  B4D8               	btfsc	status,2
  3203  007474  0E01               	movlw	1
  3204  007476  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3205  007478  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3206                           	line	214
  3207                           ;switch_pods.c: 214: break;
  3208  00747A  D02B               	goto	l975
  3209                           	line	215
  3210                           ;switch_pods.c: 215: case 6:
  3211                           	
  3212  00747C                     l102:
  3213                           	line	216
  3214                           	
  3215  00747C                     l969:
  3216                           ;switch_pods.c: 216: state = (LATG & mask) ? 0 : 1;
  3217  00747C  508F               	movf	((c:3983)),c,w	;volatile
  3218  00747E  142D               	andwf	((c:checkButton@mask)),c,w	;volatile
  3219  007480  0900               	iorlw	0
  3220  007482  0E00               	movlw	0
  3221  007484  B4D8               	btfsc	status,2
  3222  007486  0E01               	movlw	1
  3223  007488  6E2B               	movwf	((c:checkButton@state)),c	;volatile
  3224  00748A  6A2C               	clrf	((c:checkButton@state+1)),c	;volatile
  3225                           	line	217
  3226                           ;switch_pods.c: 217: break;
  3227  00748C  D022               	goto	l975
  3228                           	line	218
  3229                           ;switch_pods.c: 218: default:
  3230                           	
  3231  00748E                     l103:
  3232                           	line	220
  3233                           ;switch_pods.c: 220: break;
  3234  00748E  D021               	goto	l975
  3235                           	line	221
  3236                           	
  3237  007490                     l971:
  3238                           ;switch_pods.c: 221: }
  3239  007490  D020               	goto	l975
  3240                           	line	195
  3241                           	
  3242  007492                     l94:
  3243                           	
  3244  007492                     l973:
  3245  007492  C029  F027         	movff	(c:checkButton@port),??_checkButton+0+0	;volatile
  3246  007496  C02A  F028         	movff	(c:checkButton@port+1),??_checkButton+0+0+1	;volatile
  3247                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3248                           ; Switch size 1, requested type "space"
  3249                           ; Number of cases is 1, Range of values is 0 to 0
  3250                           ; switch strategies available:
  3251                           ; Name         Instructions Cycles
  3252                           ; simple_byte            4     3 (average)
  3253                           ;	Chosen strategy is simple_byte
  3254                           
  3255  00749A  5028               	movf ??_checkButton+0+1,c,w
  3256  00749C  0A00               	xorlw	0^0	; case 0
  3257  00749E  B4D8               	skipnz
  3258  0074A0  D001               	goto	l1191
  3259  0074A2  D017               	goto	l975
  3260                           	
  3261  0074A4                     l1191:
  3262                           ; Switch size 1, requested type "space"
  3263                           ; Number of cases is 7, Range of values is 0 to 6
  3264                           ; switch strategies available:
  3265                           ; Name         Instructions Cycles
  3266                           ; simple_byte           22    12 (average)
  3267                           ;	Chosen strategy is simple_byte
  3268                           
  3269  0074A4  5027               	movf ??_checkButton+0+0,c,w
  3270  0074A6  0A00               	xorlw	0^0	; case 0
  3271  0074A8  B4D8               	skipnz
  3272  0074AA  D7B2               	goto	l957
  3273  0074AC  0A01               	xorlw	1^0	; case 1
  3274  0074AE  B4D8               	skipnz
  3275  0074B0  D7B8               	goto	l959
  3276  0074B2  0A03               	xorlw	2^1	; case 2
  3277  0074B4  B4D8               	skipnz
  3278  0074B6  D7BE               	goto	l961
  3279  0074B8  0A01               	xorlw	3^2	; case 3
  3280  0074BA  B4D8               	skipnz
  3281  0074BC  D7C4               	goto	l963
  3282  0074BE  0A07               	xorlw	4^3	; case 4
  3283  0074C0  B4D8               	skipnz
  3284  0074C2  D7CA               	goto	l965
  3285  0074C4  0A01               	xorlw	5^4	; case 5
  3286  0074C6  B4D8               	skipnz
  3287  0074C8  D7D0               	goto	l967
  3288  0074CA  0A03               	xorlw	6^5	; case 6
  3289  0074CC  B4D8               	skipnz
  3290  0074CE  D7D6               	goto	l969
  3291  0074D0  D000               	goto	l975
  3292                           
  3293                           	line	221
  3294                           	
  3295  0074D2                     l96:
  3296                           	line	223
  3297                           	
  3298  0074D2                     l975:
  3299                           ;switch_pods.c: 223: return state;
  3300  0074D2  502B               	movf	((c:checkButton@state)),c,w	;volatile
  3301  0074D4  D000               	goto	l104
  3302                           	
  3303  0074D6                     l977:
  3304                           	line	224
  3305                           	
  3306  0074D6                     l104:
  3307  0074D6  0012               	return
  3308                           	opt stack 0
  3309                           GLOBAL	__end_of_checkButton
  3310  0074D8                     	__end_of_checkButton:
  3311                           	signat	_checkButton,4217
  3312                           	global	_setOutputs
  3313                           
  3314 ;; *************** function _setOutputs *****************
  3315 ;; Defined at:
  3316 ;;		line 264 in file "../switch_pods.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  alwayson        2    9[COMRAM] unsigned int 
  3319 ;;  leftled         2   11[COMRAM] unsigned int 
  3320 ;;  rightled        2   13[COMRAM] unsigned int 
  3321 ;;  relay           2   15[COMRAM] unsigned int 
  3322 ;;  value           2   17[COMRAM] unsigned int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;		None               void
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:        10       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3337 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:       10 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    1
  3341 ;; This function calls:
  3342 ;;		_setOutput
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           psect	text4,class=CODE,space=0,reloc=2
  3348                           global __ptext4
  3349  007388                     __ptext4:
  3350                           psect	text4
  3351                           	file	"../switch_pods.c"
  3352                           	line	264
  3353                           	global	__size_of_setOutputs
  3354  0000                     	__size_of_setOutputs	equ	__end_of_setOutputs-_setOutputs
  3355                           	
  3356  007388                     _setOutputs:
  3357                           	opt	stack 29
  3358                           	line	265
  3359                           	
  3360  007388                     l1033:
  3361                           ;switch_pods.c: 265: if( alwayson == 0 )
  3362  007388  502F               	movf	((c:setOutputs@alwayson+1)),c,w
  3363  00738A  102E               	iorwf ((c:setOutputs@alwayson)),c,w
  3364                           
  3365  00738C  A4D8               	btfss	status,2
  3366  00738E  D001               	goto	u501
  3367  007390  D001               	goto	u500
  3368  007392                     u501:
  3369  007392  D015               	goto	l1037
  3370  007394                     u500:
  3371                           	line	267
  3372                           	
  3373  007394                     l1035:
  3374                           ;switch_pods.c: 266: {
  3375                           ;switch_pods.c: 267: setOutput(leftled, 1);
  3376  007394  C030  F025         	movff	(c:setOutputs@leftled),(c:?_setOutput)
  3377  007398  C031  F026         	movff	(c:setOutputs@leftled+1),(c:?_setOutput+1)
  3378  00739C  0E00               	movlw	high(01h)
  3379  00739E  6E28               	movwf	(1+((c:?_setOutput)+02h)),c
  3380  0073A0  0E01               	movlw	low(01h)
  3381  0073A2  6E27               	movwf	(0+((c:?_setOutput)+02h)),c
  3382  0073A4  EC6C  F03A         	call	_setOutput	;wreg free
  3383                           	line	268
  3384                           ;switch_pods.c: 268: setOutput(rightled, value);
  3385  0073A8  C032  F025         	movff	(c:setOutputs@rightled),(c:?_setOutput)
  3386  0073AC  C033  F026         	movff	(c:setOutputs@rightled+1),(c:?_setOutput+1)
  3387  0073B0  C036  F027         	movff	(c:setOutputs@value),0+((c:?_setOutput)+02h)
  3388  0073B4  C037  F028         	movff	(c:setOutputs@value+1),1+((c:?_setOutput)+02h)
  3389  0073B8  EC6C  F03A         	call	_setOutput	;wreg free
  3390                           	line	269
  3391                           ;switch_pods.c: 269: }
  3392  0073BC  D014               	goto	l135
  3393                           	line	270
  3394                           	
  3395  0073BE                     l134:
  3396                           	line	272
  3397                           	
  3398  0073BE                     l1037:
  3399                           ;switch_pods.c: 270: else
  3400                           ;switch_pods.c: 271: {
  3401                           ;switch_pods.c: 272: setOutput(leftled, value);
  3402  0073BE  C030  F025         	movff	(c:setOutputs@leftled),(c:?_setOutput)
  3403  0073C2  C031  F026         	movff	(c:setOutputs@leftled+1),(c:?_setOutput+1)
  3404  0073C6  C036  F027         	movff	(c:setOutputs@value),0+((c:?_setOutput)+02h)
  3405  0073CA  C037  F028         	movff	(c:setOutputs@value+1),1+((c:?_setOutput)+02h)
  3406  0073CE  EC6C  F03A         	call	_setOutput	;wreg free
  3407                           	line	273
  3408                           ;switch_pods.c: 273: setOutput(rightled, 1);
  3409  0073D2  C032  F025         	movff	(c:setOutputs@rightled),(c:?_setOutput)
  3410  0073D6  C033  F026         	movff	(c:setOutputs@rightled+1),(c:?_setOutput+1)
  3411  0073DA  0E00               	movlw	high(01h)
  3412  0073DC  6E28               	movwf	(1+((c:?_setOutput)+02h)),c
  3413  0073DE  0E01               	movlw	low(01h)
  3414  0073E0  6E27               	movwf	(0+((c:?_setOutput)+02h)),c
  3415  0073E2  EC6C  F03A         	call	_setOutput	;wreg free
  3416                           	line	274
  3417                           	
  3418  0073E6                     l135:
  3419                           	line	276
  3420                           ;switch_pods.c: 274: }
  3421                           ;switch_pods.c: 276: setOutput(relay, value);
  3422  0073E6  C034  F025         	movff	(c:setOutputs@relay),(c:?_setOutput)
  3423  0073EA  C035  F026         	movff	(c:setOutputs@relay+1),(c:?_setOutput+1)
  3424  0073EE  C036  F027         	movff	(c:setOutputs@value),0+((c:?_setOutput)+02h)
  3425  0073F2  C037  F028         	movff	(c:setOutputs@value+1),1+((c:?_setOutput)+02h)
  3426  0073F6  EC6C  F03A         	call	_setOutput	;wreg free
  3427                           	line	277
  3428                           	
  3429  0073FA                     l136:
  3430  0073FA  0012               	return
  3431                           	opt stack 0
  3432                           GLOBAL	__end_of_setOutputs
  3433  0073FC                     	__end_of_setOutputs:
  3434                           	signat	_setOutputs,20600
  3435                           	global	_setOutput
  3436                           
  3437 ;; *************** function _setOutput *****************
  3438 ;; Defined at:
  3439 ;;		line 227 in file "../switch_pods.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  row             2    0[COMRAM] unsigned int 
  3442 ;;  value           2    2[COMRAM] unsigned int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  port            2    6[COMRAM] volatile unsigned int 
  3445 ;;  mask            1    8[COMRAM] volatile unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;		None               void
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3455 ;;      Params:         4       0       0       0       0       0       0       0       0
  3456 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3457 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3458 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3459 ;;Total ram usage:        9 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_setOutputs
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           psect	text5,class=CODE,space=0,reloc=2
  3468                           global __ptext5
  3469  0074D8                     __ptext5:
  3470                           psect	text5
  3471                           	file	"../switch_pods.c"
  3472                           	line	227
  3473                           	global	__size_of_setOutput
  3474  0000                     	__size_of_setOutput	equ	__end_of_setOutput-_setOutput
  3475                           	
  3476  0074D8                     _setOutput:
  3477                           	opt	stack 29
  3478                           	line	231
  3479                           	
  3480  0074D8                     l981:
  3481                           ;switch_pods.c: 228: volatile uint16_t port;
  3482                           ;switch_pods.c: 229: volatile unsigned char mask;
  3483                           ;switch_pods.c: 231: port = (row >> 8);
  3484  0074D8  5026               	movf	((c:setOutput@row+1)),c,w
  3485  0074DA  6E2B               	movwf	((c:setOutput@port)),c	;volatile
  3486  0074DC  6A2C               	clrf	((c:setOutput@port+1)),c	;volatile
  3487                           	line	232
  3488                           	
  3489  0074DE                     l983:
  3490                           ;switch_pods.c: 232: mask = (char)(row & 0x00FF);
  3491  0074DE  C025  F02D         	movff	(c:setOutput@row),(c:setOutput@mask)	;volatile
  3492                           	line	234
  3493                           ;switch_pods.c: 234: switch( port )
  3494  0074E2  D064               	goto	l1029
  3495                           	line	236
  3496                           ;switch_pods.c: 235: {
  3497                           ;switch_pods.c: 236: case 0:
  3498                           	
  3499  0074E4                     l108:
  3500                           	line	237
  3501                           	
  3502  0074E4                     l985:
  3503                           ;switch_pods.c: 237: if(value == 1) { PORTA |= mask; } else { PORTA &= (~mask); }
  3504  0074E4  0427               	decf	((c:setOutput@value)),c,w
  3505  0074E6  1028               	iorwf ((c:setOutput@value+1)),c,w
  3506                           
  3507  0074E8  A4D8               	btfss	status,2
  3508  0074EA  D001               	goto	u431
  3509  0074EC  D001               	goto	u430
  3510  0074EE                     u431:
  3511  0074EE  D003               	goto	l989
  3512  0074F0                     u430:
  3513                           	
  3514  0074F0                     l987:
  3515  0074F0  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3516  0074F2  1280               	iorwf	((c:3968)),c	;volatile
  3517  0074F4  D07B               	goto	l131
  3518                           	
  3519  0074F6                     l109:
  3520                           	
  3521  0074F6                     l989:
  3522  0074F6  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3523  0074F8  0AFF               	xorlw	0ffh
  3524  0074FA  1680               	andwf	((c:3968)),c	;volatile
  3525  0074FC  D077               	goto	l131
  3526                           	
  3527  0074FE                     l110:
  3528                           	line	238
  3529                           ;switch_pods.c: 238: break;
  3530  0074FE  D076               	goto	l131
  3531                           	line	239
  3532                           ;switch_pods.c: 239: case 1:
  3533                           	
  3534  007500                     l112:
  3535                           	line	240
  3536                           	
  3537  007500                     l991:
  3538                           ;switch_pods.c: 240: if(value == 1) { PORTB |= mask; } else { PORTB &= (~mask); }
  3539  007500  0427               	decf	((c:setOutput@value)),c,w
  3540  007502  1028               	iorwf ((c:setOutput@value+1)),c,w
  3541                           
  3542  007504  A4D8               	btfss	status,2
  3543  007506  D001               	goto	u441
  3544  007508  D001               	goto	u440
  3545  00750A                     u441:
  3546  00750A  D003               	goto	l995
  3547  00750C                     u440:
  3548                           	
  3549  00750C                     l993:
  3550  00750C  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3551  00750E  1281               	iorwf	((c:3969)),c	;volatile
  3552  007510  D06D               	goto	l131
  3553                           	
  3554  007512                     l113:
  3555                           	
  3556  007512                     l995:
  3557  007512  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3558  007514  0AFF               	xorlw	0ffh
  3559  007516  1681               	andwf	((c:3969)),c	;volatile
  3560  007518  D069               	goto	l131
  3561                           	
  3562  00751A                     l114:
  3563                           	line	241
  3564                           ;switch_pods.c: 241: break;
  3565  00751A  D068               	goto	l131
  3566                           	line	242
  3567                           ;switch_pods.c: 242: case 2:
  3568                           	
  3569  00751C                     l115:
  3570                           	line	243
  3571                           	
  3572  00751C                     l997:
  3573                           ;switch_pods.c: 243: if(value == 1) { PORTC |= mask; } else { PORTC &= (~mask); }
  3574  00751C  0427               	decf	((c:setOutput@value)),c,w
  3575  00751E  1028               	iorwf ((c:setOutput@value+1)),c,w
  3576                           
  3577  007520  A4D8               	btfss	status,2
  3578  007522  D001               	goto	u451
  3579  007524  D001               	goto	u450
  3580  007526                     u451:
  3581  007526  D003               	goto	l1001
  3582  007528                     u450:
  3583                           	
  3584  007528                     l999:
  3585  007528  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3586  00752A  1282               	iorwf	((c:3970)),c	;volatile
  3587  00752C  D05F               	goto	l131
  3588                           	
  3589  00752E                     l116:
  3590                           	
  3591  00752E                     l1001:
  3592  00752E  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3593  007530  0AFF               	xorlw	0ffh
  3594  007532  1682               	andwf	((c:3970)),c	;volatile
  3595  007534  D05B               	goto	l131
  3596                           	
  3597  007536                     l117:
  3598                           	line	244
  3599                           ;switch_pods.c: 244: break;
  3600  007536  D05A               	goto	l131
  3601                           	line	245
  3602                           ;switch_pods.c: 245: case 3:
  3603                           	
  3604  007538                     l118:
  3605                           	line	246
  3606                           	
  3607  007538                     l1003:
  3608                           ;switch_pods.c: 246: if(value == 1) { PORTD |= mask; } else { PORTD &= (~mask); }
  3609  007538  0427               	decf	((c:setOutput@value)),c,w
  3610  00753A  1028               	iorwf ((c:setOutput@value+1)),c,w
  3611                           
  3612  00753C  A4D8               	btfss	status,2
  3613  00753E  D001               	goto	u461
  3614  007540  D001               	goto	u460
  3615  007542                     u461:
  3616  007542  D003               	goto	l1007
  3617  007544                     u460:
  3618                           	
  3619  007544                     l1005:
  3620  007544  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3621  007546  1283               	iorwf	((c:3971)),c	;volatile
  3622  007548  D051               	goto	l131
  3623                           	
  3624  00754A                     l119:
  3625                           	
  3626  00754A                     l1007:
  3627  00754A  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3628  00754C  0AFF               	xorlw	0ffh
  3629  00754E  1683               	andwf	((c:3971)),c	;volatile
  3630  007550  D04D               	goto	l131
  3631                           	
  3632  007552                     l120:
  3633                           	line	247
  3634                           ;switch_pods.c: 247: break;
  3635  007552  D04C               	goto	l131
  3636                           	line	248
  3637                           ;switch_pods.c: 248: case 4:
  3638                           	
  3639  007554                     l121:
  3640                           	line	249
  3641                           	
  3642  007554                     l1009:
  3643                           ;switch_pods.c: 249: if(value == 1) { PORTE |= mask; } else { PORTE &= (~mask); }
  3644  007554  0427               	decf	((c:setOutput@value)),c,w
  3645  007556  1028               	iorwf ((c:setOutput@value+1)),c,w
  3646                           
  3647  007558  A4D8               	btfss	status,2
  3648  00755A  D001               	goto	u471
  3649  00755C  D001               	goto	u470
  3650  00755E                     u471:
  3651  00755E  D003               	goto	l1013
  3652  007560                     u470:
  3653                           	
  3654  007560                     l1011:
  3655  007560  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3656  007562  1284               	iorwf	((c:3972)),c	;volatile
  3657  007564  D043               	goto	l131
  3658                           	
  3659  007566                     l122:
  3660                           	
  3661  007566                     l1013:
  3662  007566  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3663  007568  0AFF               	xorlw	0ffh
  3664  00756A  1684               	andwf	((c:3972)),c	;volatile
  3665  00756C  D03F               	goto	l131
  3666                           	
  3667  00756E                     l123:
  3668                           	line	250
  3669                           ;switch_pods.c: 250: break;
  3670  00756E  D03E               	goto	l131
  3671                           	line	251
  3672                           ;switch_pods.c: 251: case 5:
  3673                           	
  3674  007570                     l124:
  3675                           	line	252
  3676                           	
  3677  007570                     l1015:
  3678                           ;switch_pods.c: 252: if(value == 1) { PORTF |= mask; } else { PORTF &= (~mask); }
  3679  007570  0427               	decf	((c:setOutput@value)),c,w
  3680  007572  1028               	iorwf ((c:setOutput@value+1)),c,w
  3681                           
  3682  007574  A4D8               	btfss	status,2
  3683  007576  D001               	goto	u481
  3684  007578  D001               	goto	u480
  3685  00757A                     u481:
  3686  00757A  D003               	goto	l1019
  3687  00757C                     u480:
  3688                           	
  3689  00757C                     l1017:
  3690  00757C  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3691  00757E  1285               	iorwf	((c:3973)),c	;volatile
  3692  007580  D035               	goto	l131
  3693                           	
  3694  007582                     l125:
  3695                           	
  3696  007582                     l1019:
  3697  007582  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3698  007584  0AFF               	xorlw	0ffh
  3699  007586  1685               	andwf	((c:3973)),c	;volatile
  3700  007588  D031               	goto	l131
  3701                           	
  3702  00758A                     l126:
  3703                           	line	253
  3704                           ;switch_pods.c: 253: break;
  3705  00758A  D030               	goto	l131
  3706                           	line	254
  3707                           ;switch_pods.c: 254: case 6:
  3708                           	
  3709  00758C                     l127:
  3710                           	line	255
  3711                           	
  3712  00758C                     l1021:
  3713                           ;switch_pods.c: 255: if(value == 1) { PORTG |= mask; } else { PORTG &= (~mask); }
  3714  00758C  0427               	decf	((c:setOutput@value)),c,w
  3715  00758E  1028               	iorwf ((c:setOutput@value+1)),c,w
  3716                           
  3717  007590  A4D8               	btfss	status,2
  3718  007592  D001               	goto	u491
  3719  007594  D001               	goto	u490
  3720  007596                     u491:
  3721  007596  D003               	goto	l1025
  3722  007598                     u490:
  3723                           	
  3724  007598                     l1023:
  3725  007598  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3726  00759A  1286               	iorwf	((c:3974)),c	;volatile
  3727  00759C  D027               	goto	l131
  3728                           	
  3729  00759E                     l128:
  3730                           	
  3731  00759E                     l1025:
  3732  00759E  502D               	movf	((c:setOutput@mask)),c,w	;volatile
  3733  0075A0  0AFF               	xorlw	0ffh
  3734  0075A2  1686               	andwf	((c:3974)),c	;volatile
  3735  0075A4  D023               	goto	l131
  3736                           	
  3737  0075A6                     l129:
  3738                           	line	256
  3739                           ;switch_pods.c: 256: break;
  3740  0075A6  D022               	goto	l131
  3741                           	line	257
  3742                           ;switch_pods.c: 257: default:
  3743                           	
  3744  0075A8                     l130:
  3745                           	line	259
  3746                           ;switch_pods.c: 259: break;
  3747  0075A8  D021               	goto	l131
  3748                           	line	260
  3749                           	
  3750  0075AA                     l1027:
  3751                           ;switch_pods.c: 260: }
  3752  0075AA  D020               	goto	l131
  3753                           	line	234
  3754                           	
  3755  0075AC                     l107:
  3756                           	
  3757  0075AC                     l1029:
  3758  0075AC  C02B  F029         	movff	(c:setOutput@port),??_setOutput+0+0	;volatile
  3759  0075B0  C02C  F02A         	movff	(c:setOutput@port+1),??_setOutput+0+0+1	;volatile
  3760                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3761                           ; Switch size 1, requested type "space"
  3762                           ; Number of cases is 1, Range of values is 0 to 0
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte            4     3 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767                           
  3768  0075B4  502A               	movf ??_setOutput+0+1,c,w
  3769  0075B6  0A00               	xorlw	0^0	; case 0
  3770  0075B8  B4D8               	skipnz
  3771  0075BA  D001               	goto	l1193
  3772  0075BC  D017               	goto	l131
  3773                           	
  3774  0075BE                     l1193:
  3775                           ; Switch size 1, requested type "space"
  3776                           ; Number of cases is 7, Range of values is 0 to 6
  3777                           ; switch strategies available:
  3778                           ; Name         Instructions Cycles
  3779                           ; simple_byte           22    12 (average)
  3780                           ;	Chosen strategy is simple_byte
  3781                           
  3782  0075BE  5029               	movf ??_setOutput+0+0,c,w
  3783  0075C0  0A00               	xorlw	0^0	; case 0
  3784  0075C2  B4D8               	skipnz
  3785  0075C4  D78F               	goto	l985
  3786  0075C6  0A01               	xorlw	1^0	; case 1
  3787  0075C8  B4D8               	skipnz
  3788  0075CA  D79A               	goto	l991
  3789  0075CC  0A03               	xorlw	2^1	; case 2
  3790  0075CE  B4D8               	skipnz
  3791  0075D0  D7A5               	goto	l997
  3792  0075D2  0A01               	xorlw	3^2	; case 3
  3793  0075D4  B4D8               	skipnz
  3794  0075D6  D7B0               	goto	l1003
  3795  0075D8  0A07               	xorlw	4^3	; case 4
  3796  0075DA  B4D8               	skipnz
  3797  0075DC  D7BB               	goto	l1009
  3798  0075DE  0A01               	xorlw	5^4	; case 5
  3799  0075E0  B4D8               	skipnz
  3800  0075E2  D7C6               	goto	l1015
  3801  0075E4  0A03               	xorlw	6^5	; case 6
  3802  0075E6  B4D8               	skipnz
  3803  0075E8  D7D1               	goto	l1021
  3804  0075EA  D000               	goto	l131
  3805                           
  3806                           	line	260
  3807                           	
  3808  0075EC                     l111:
  3809                           	line	261
  3810                           	
  3811  0075EC                     l131:
  3812  0075EC  0012               	return
  3813                           	opt stack 0
  3814                           GLOBAL	__end_of_setOutput
  3815  0075EE                     	__end_of_setOutput:
  3816                           	signat	_setOutput,8312
  3817                           	GLOBAL	__activetblptr
  3818  0000                     __activetblptr	EQU	0
  3819                           	psect	intsave_regs,class=BIGRAM,space=1
  3820                           psect	text6,class=CODE,space=0,reloc=2
  3821                           global __ptext6
  3822  000000                     __ptext6:
  3823                           	PSECT	rparam,class=COMRAM,space=1
  3824                           	GLOBAL	__Lrparam
  3825                           	FNCONF	rparam,??,?
  3826                           GLOBAL	__Lparam, __Hparam
  3827                           GLOBAL	__Lrparam, __Hrparam
  3828  0000                     __Lparam	EQU	__Lrparam
  3829  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        90
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      78
    BANK0           160      0      18
    BANK1           256    166     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setOutputs
    _setOutputs->_setOutput
    _setOutputs->_checkButton

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               171   171      0    3354
                                             19 COMRAM     5     5      0
                                              0 BANK1    166   166      0
                            _setupIO
                          __delay_ms
                        _checkButton
                         _setOutputs
 ---------------------------------------------------------------------------------
 (1) _setupIO                                              4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) __delay_ms                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _checkButton                                          9     7      2     252
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _setOutputs                                          10     0     10     728
                                              9 COMRAM    10     0     10
                          _setOutput
                        _checkButton (ARG)
 ---------------------------------------------------------------------------------
 (2) _setOutput                                            9     5      4     530
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupIO
   __delay_ms
   _checkButton
   _setOutputs
     _setOutput
     _checkButton (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     A6     100       8      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      12       5       11.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      4E       1       82.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     160       6        0.0%
DATA                 0      0     162       3        0.0%
CODE                 0      0       0       0        0.0%


HI-TECH Software PICC-18 Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Fri Mar 22 22:12:06 2013

                  l35 72C2                    l60 77DA                    l61 77DC                    l38 72C0  
                  l70 7998                    l62 7810                    l71 7A60                    l63 793C  
                  l80 7D3E                    l72 7A96                    l64 78AE                    l81 7D74  
                  l73 7BF4                    l65 788A                    l90 7FFC                    l82 7FF4  
                  l74 7B4E                    l66 791C                    l91 7FFC                    l83 7E56  
                  l75 7B08                    l67 78F8                    l59 7702                    l84 7E54  
                  l68 7BF6                    l76 7B2A                    l77 7FF8                    l85 7E0E  
                  l69 7A6E                    l94 7492                    l86 7E30                    l78 7D4C  
                  l95 7410                    l87 7F32                    l79 7C3A                    l96 74D2  
                  l88 7EC2                    l97 7422                    l89 7F30                    l98 7434  
                  l99 7446                   l100 7458                   l101 746A                   l110 74FE  
                 l102 747C                   l111 75EC                   l103 748E                   l120 7552  
                 l112 7500                   l104 74D6                   l121 7554                   l113 7512  
                 l130 75A8                   l122 7566                   l114 751A                   l107 75AC  
                 l123 756E                   l115 751C                   l131 75EC                   l124 7570  
                 l116 752E                   l108 74E4                   l125 7582                   l117 7536  
                 l109 74F6                   l126 758A                   l118 7538                   l134 73BE  
                 l127 758C                   l119 754A                   l135 73E6                   l128 759E  
                 l136 73FA                   l129 75A6                   l961 7434                   l953 73FC  
                 l971 7490                   l963 7446                   l955 740A                   l981 74D8  
                 l965 7458                   l957 7410                   l973 7492                   l991 7500  
                 l983 74DE                   l967 746A                   l959 7422                   l975 74D2  
                 l993 750C                   l985 74E4                   l977 74D6                   l969 747C  
                 l995 7512                   l987 74F0                   l997 751C                   l989 74F6  
                 l999 7528                   u500 7394                   u501 7392                   u430 74F0  
                 u431 74EE                   u511 75F8                   u440 750C                   u600 76FE  
                 u441 750A                   u601 76FC                   u521 760A                   u450 7528  
                 u610 77D8                   u451 7526                   u611 77D6                   u531 761C  
                 u460 7544                   u700 7A5E                   u620 780C                   u461 7542  
                 u701 7A5C                   u621 780A                   u541 762E                   u470 7560  
                 u710 7A92                   u630 7842                   u471 755E                   u711 7A90  
                 u631 7840                   u551 7640                   u480 757C                   u800 7DC4  
                 u720 7ABE                   u640 7868                   u481 757A                   u801 7DC2  
                 u721 7ABC                   u641 7866                   u561 7652                   u490 7598  
                 u810 7DEA                   u730 7AE4                   u650 78D6                   u491 7596  
                 u811 7DE8                   u731 7AE2                   u651 78D4                   u571 7664  
                 u820 7E7E                   u740 7BF2                   u660 793A                   u821 7E7C  
                 u741 7BF0                   u661 7938                   u581 7676                   u830 7EEA  
                 u750 7C06                   u670 7954                   u831 7EE8                   u751 7C04  
                 u671 7952                   u591 7688                   u840 7FF0                   u760 7C36  
                 u680 7964                   u841 7FEE                   u761 7C34                   u681 7962  
                 u770 7D3C                   u690 7994                   u771 7D3A                   u691 7992  
                 u780 7D70                   u781 7D6E                   u790 7D9C                   u791 7D9A  
                 wreg 000FE8     main@buttonEventUp 0190                  l1001 752E                  l1011 7560  
                l1003 7538                  l1021 758C                  l1013 7566                  l1005 7544  
                l1101 7A48                  l1023 7598                  l1015 7570                  l1007 754A  
                l1111 7ABE                  l1103 7A60                  l1025 759E                  l1017 757C  
                l1009 7554                  l1033 7388                  l1121 7BDC                  l1113 7AE4  
                l1105 7A7C                  l1041 7690                  l1027 75AA                  l1019 7582  
                l1035 7394                  l1131 7C38                  l1115 7B08                  l1107 7A94  
                l1123 7BF6                  l1051 76E8                  l1043 769E                  l1029 75AC  
                l1037 73BE                  l1141 7D26                  l1133 7C3A                  l1125 7C06  
                l1117 7B4E                  l1109 7A96                  l1053 7700                  l1061 77DC  
                l1045 76B2                  l1151 7D9C                  l1135 7CDA                  l1143 7D3E  
                l1127 7C12                  l1119 7BD4                  l1071 7842                  l1063 77E8  
                l1055 7702                  l1047 76C6                  l1039 75EE                  l1161 7E7E  
                l1153 7DC4                  l1145 7D5A                  l1137 7CFC                  l1129 7C20  
                l1081 7924                  l1073 7868                  l1065 77F6                  l1057 77BA  
                l1049 76DA                  l1163 7EEA                  l1155 7DEA                  l1147 7D72  
                l1139 7D1E                  l1091 797E                  l1075 78AE                  l1067 780E  
                l1083 793C                  l1059 77C2                  l1157 7E0E                  l1165 7F32  
                l1149 7D74                  l1093 7996                  l1085 7954                  l1077 78D6  
                l1069 7810                  l1191 74A4                  l1167 7FD2                  l1159 7E56  
                l1095 7998                  l1087 7964                  l1079 791C                  l1193 75BE  
                l1169 7FDA                  l1097 7A1E                  l1089 7970                  l1099 7A40  
                _LATA 000F89                  _LATB 000F8A                  _LATC 000F8B                  _LATD 000F8C  
                _LATE 000F8D                  _LATF 000F8E                  _LATG 000F8F                  _main 75EE  
                fsr1l 000FE1                  fsr2l 000FD9                  start 0000                 ?_main 0025  
        __delay_ms@ms 0025                 _PORTA 000F80                 _PORTB 000F81                 _PORTC 000F82  
               _PORTD 000F83                 _PORTE 000F84                 _PORTF 000F85                 _PORTG 000F86  
__size_of_checkButton 00DC                 main@i 01A4                 tablat 000FF5       __end_of_setupIO 72C4  
               status 000FD8   main@buttonEventDown 0136     setOutputs@leftled 0030          __end_of_main 8000  
              ??_main 0038         __activetblptr 000000         main@relayMask 0112                clear_0 7324  
              clear_1 7330                clear_2 733C          __pdataCOMRAM 003D                tblptrh 000FF7  
              tblptrl 000FF6                tblptru 000FF8             ??_setupIO 0029    setOutputs@alwayson 002E  
          __accesstop 0060        setOutput@value 0027    __size_of__delay_ms 0002    setOutputs@rightled 0032  
      __pcstackCOMRAM 0025          __pidataBANK1 72D6            __pbssBANK0 0060            __pbssBANK1 01EE  
  __size_of_setOutput 0116     __end_of__delay_ms 72C2      setupIO@direction 0027        main@buttonDown 0124  
      main@buttonMask 0100               __Hparam 0000               __Lparam 0000               __pcinit 731E  
       ??_checkButton 0027               __ramtop 0800               __ptext0 75EE               __ptext1 72C2  
             __ptext2 72C0               __ptext3 73FC               __ptext4 7388               __ptext5 74D8  
             __ptext6 0000        checkButton@row 0025               _setupIO 72C2  end_of_initialization 7382  
   __end_of_setOutput 75EE            _setOutputs 7388               postdec1 000FE5               postdec2 000FDD  
             postinc0 000FEE               postinc1 000FE6               postinc2 000FDE   __end_of_checkButton 74D8  
     setOutputs@relay 0034       setOutputs@value 0036         __pidataCOMRAM 72C4   start_initialization 731E  
         ?_setOutputs 002E           __pdataBANK1 01A6           _checkButton 73FC         setOutput@mask 002D  
       setOutput@port 002B           __pbssCOMRAM 0001         __pcstackBANK1 0100             __delay_ms 72C0  
    main@rightLEDMask 015A       main@leftLEDMask 0148   __size_of_setOutputs 0074              ?_setupIO 0025  
          ?__delay_ms 0025      checkButton@state 002B             _setOutput 74D8             main@F9050 01B8  
           main@F9060 0013             main@F9052 01CA             main@F9054 01DC             main@F9062 003D  
           main@F9056 01EE             main@F9064 0060             main@F9048 01A6             main@F9058 0001  
          setupIO@row 0025       main@buttonLatch 016C       main@buttonState 017E             copy_data0 7356  
           copy_data1 7376              __Hrparam 0000            ?_setOutput 0025              __Lrparam 0000  
        setOutput@row 0025           ??__delay_ms 0027      __size_of_setupIO 0002      main@programState 01A2  
       __size_of_main 0A12          ??_setOutputs 0038       checkButton@mask 002D       checkButton@port 0029  
        ?_checkButton 0025    __end_of_setOutputs 73FC           ??_setOutput 0029  
